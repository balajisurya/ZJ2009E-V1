[DEBUG] 2016-05-02 17:37:40,605 org.springframework.core.env.StandardEnvironment addLast - Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:40,613 org.springframework.core.env.StandardEnvironment addLast - Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:40,616 org.springframework.core.env.StandardEnvironment <init> - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] 2016-05-02 17:37:40,622 org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2401f4c3: startup date [Mon May 02 17:37:40 IST 2016]; root of context hierarchy
[DEBUG] 2016-05-02 17:37:40,682 org.springframework.core.env.StandardEnvironment addLast - Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:40,682 org.springframework.core.env.StandardEnvironment addLast - Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:40,683 org.springframework.core.env.StandardEnvironment <init> - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[INFO] 2016-05-02 17:37:40,700 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions - Loading XML bean definitions from class path resource [applicationContext.xml]
[DEBUG] 2016-05-02 17:37:40,727 org.springframework.beans.factory.xml.DefaultDocumentLoader loadDocument - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] 2016-05-02 17:37:40,778 org.springframework.beans.factory.xml.PluggableSchemaResolver getSchemaMappings - Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] 2016-05-02 17:37:40,793 org.springframework.beans.factory.xml.PluggableSchemaResolver getSchemaMappings - Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[DEBUG] 2016-05-02 17:37:40,794 org.springframework.beans.factory.xml.PluggableSchemaResolver resolveEntity - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[DEBUG] 2016-05-02 17:37:40,860 org.springframework.beans.factory.xml.PluggableSchemaResolver resolveEntity - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
[DEBUG] 2016-05-02 17:37:40,870 org.springframework.beans.factory.xml.PluggableSchemaResolver resolveEntity - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
[DEBUG] 2016-05-02 17:37:40,877 org.springframework.beans.factory.xml.PluggableSchemaResolver resolveEntity - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
[DEBUG] 2016-05-02 17:37:40,902 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader registerBeanDefinitions - Loading bean definitions
[DEBUG] 2016-05-02 17:37:40,923 org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver getHandlerMappings - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
[DEBUG] 2016-05-02 17:37:40,985 org.springframework.core.env.StandardEnvironment addLast - Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:40,985 org.springframework.core.env.StandardEnvironment addLast - Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:40,986 org.springframework.core.env.StandardEnvironment <init> - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG] 2016-05-02 17:37:41,016 org.springframework.context.annotation.ClassPathBeanDefinitionScanner registerDefaultFilters - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
[DEBUG] 2016-05-02 17:37:41,020 org.springframework.context.annotation.ClassPathBeanDefinitionScanner registerDefaultFilters - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[DEBUG] 2016-05-02 17:37:41,032 org.springframework.core.io.support.PathMatchingResourcePatternResolver doFindPathMatchingJarResources - Looking for matching resources in jar file [file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar]
[DEBUG] 2016-05-02 17:37:41,086 org.springframework.core.io.support.PathMatchingResourcePatternResolver findPathMatchingResources - Resolved location pattern [classpath*:in/jdsoft/dms/dao/**/*.class] to resources [URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/FolderDAO.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/DocumentDAO.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/UsersRoleDAO.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/UsersAccessDAO.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/UsersDAO.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/DocumentHistoryDAO.class]]
[DEBUG] 2016-05-02 17:37:41,141 org.springframework.context.annotation.ClassPathBeanDefinitionScanner findCandidateComponents - Identified candidate component class: URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/FolderDAO.class]
[DEBUG] 2016-05-02 17:37:41,147 org.springframework.context.annotation.ClassPathBeanDefinitionScanner findCandidateComponents - Identified candidate component class: URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/DocumentDAO.class]
[DEBUG] 2016-05-02 17:37:41,150 org.springframework.context.annotation.ClassPathBeanDefinitionScanner findCandidateComponents - Identified candidate component class: URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/UsersRoleDAO.class]
[DEBUG] 2016-05-02 17:37:41,155 org.springframework.context.annotation.ClassPathBeanDefinitionScanner findCandidateComponents - Identified candidate component class: URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/UsersAccessDAO.class]
[DEBUG] 2016-05-02 17:37:41,160 org.springframework.context.annotation.ClassPathBeanDefinitionScanner findCandidateComponents - Identified candidate component class: URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/UsersDAO.class]
[DEBUG] 2016-05-02 17:37:41,164 org.springframework.context.annotation.ClassPathBeanDefinitionScanner findCandidateComponents - Identified candidate component class: URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/dao/DocumentHistoryDAO.class]
[DEBUG] 2016-05-02 17:37:41,169 org.springframework.core.env.StandardEnvironment addLast - Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:41,170 org.springframework.core.env.StandardEnvironment addLast - Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:41,170 org.springframework.core.env.StandardEnvironment <init> - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG] 2016-05-02 17:37:41,170 org.springframework.context.annotation.ClassPathBeanDefinitionScanner registerDefaultFilters - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
[DEBUG] 2016-05-02 17:37:41,170 org.springframework.context.annotation.ClassPathBeanDefinitionScanner registerDefaultFilters - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[DEBUG] 2016-05-02 17:37:41,177 org.springframework.core.io.support.PathMatchingResourcePatternResolver doFindPathMatchingJarResources - Looking for matching resources in jar file [file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar]
[DEBUG] 2016-05-02 17:37:41,200 org.springframework.core.io.support.PathMatchingResourcePatternResolver findPathMatchingResources - Resolved location pattern [classpath*:in/jdsoft/dms/services/**/*.class] to resources [URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/services/jdsoftDMS.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/services/ApplicationContextHandler.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/services/CommonMethods.class]]
[DEBUG] 2016-05-02 17:37:41,208 org.springframework.core.env.StandardEnvironment addLast - Adding [systemProperties] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:41,209 org.springframework.core.env.StandardEnvironment addLast - Adding [systemEnvironment] PropertySource with lowest search precedence
[DEBUG] 2016-05-02 17:37:41,210 org.springframework.core.env.StandardEnvironment <init> - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
[DEBUG] 2016-05-02 17:37:41,210 org.springframework.context.annotation.ClassPathBeanDefinitionScanner registerDefaultFilters - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
[DEBUG] 2016-05-02 17:37:41,210 org.springframework.context.annotation.ClassPathBeanDefinitionScanner registerDefaultFilters - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
[DEBUG] 2016-05-02 17:37:41,212 org.springframework.core.io.support.PathMatchingResourcePatternResolver doFindPathMatchingJarResources - Looking for matching resources in jar file [file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar]
[DEBUG] 2016-05-02 17:37:41,243 org.springframework.core.io.support.PathMatchingResourcePatternResolver findPathMatchingResources - Resolved location pattern [classpath*:in/jdsoft/dms/model/**/*.class] to resources [URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/Document.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/UsersAccess.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/DocumentHistory.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/Folder.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/UsersRole.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/DataSource.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/Users.class]]
[DEBUG] 2016-05-02 17:37:41,285 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions - Loaded 19 bean definitions from location pattern [applicationContext.xml]
[DEBUG] 2016-05-02 17:37:41,285 org.springframework.context.support.ClassPathXmlApplicationContext obtainFreshBeanFactory - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2401f4c3: org.springframework.beans.factory.support.DefaultListableBeanFactory@5bcea91b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,folderDAO,documentDAO,usersRoleDAO,usersAccessDAO,usersDAO,documentHistoryDAO,ds,dataSource,sessionFactory,transactionManager]; root of factory hierarchy
[DEBUG] 2016-05-02 17:37:41,311 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,311 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,330 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,333 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,407 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,407 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[INFO] 2016-05-02 17:37:41,409 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor <init> - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[DEBUG] 2016-05-02 17:37:41,410 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,410 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,410 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,411 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,412 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,412 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,412 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,413 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,420 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,421 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,421 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,421 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,422 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,422 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,422 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] 2016-05-02 17:37:41,422 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] 2016-05-02 17:37:41,423 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,423 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] 2016-05-02 17:37:41,424 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[DEBUG] 2016-05-02 17:37:41,424 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[DEBUG] 2016-05-02 17:37:41,440 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,472 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[DEBUG] 2016-05-02 17:37:41,475 org.springframework.context.support.ClassPathXmlApplicationContext initMessageSource - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5762806e]
[DEBUG] 2016-05-02 17:37:41,478 org.springframework.context.support.ClassPathXmlApplicationContext initApplicationEventMulticaster - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2d9d4f9d]
[INFO] 2016-05-02 17:37:41,481 org.springframework.beans.factory.support.DefaultListableBeanFactory preInstantiateSingletons - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5bcea91b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,folderDAO,documentDAO,usersRoleDAO,usersAccessDAO,usersDAO,documentHistoryDAO,ds,dataSource,sessionFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[DEBUG] 2016-05-02 17:37:41,482 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[DEBUG] 2016-05-02 17:37:41,487 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,492 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:41,493 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:41,496 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,513 org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper findAdvisorBeans - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:41,516 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning eagerly cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' that is not fully initialized yet - a consequence of a circular reference
[DEBUG] 2016-05-02 17:37:41,516 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:41,519 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[DEBUG] 2016-05-02 17:37:41,519 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[DEBUG] 2016-05-02 17:37:41,519 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[DEBUG] 2016-05-02 17:37:41,525 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,530 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[DEBUG] 2016-05-02 17:37:41,531 org.springframework.beans.factory.support.DefaultListableBeanFactory invokeInitMethods - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[DEBUG] 2016-05-02 17:37:41,531 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[DEBUG] 2016-05-02 17:37:41,531 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:41,532 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'folderDAO'
[DEBUG] 2016-05-02 17:37:41,532 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'folderDAO'
[DEBUG] 2016-05-02 17:37:41,543 org.springframework.beans.factory.annotation.InjectionMetadata checkConfigMembers - Registered injected element on class [in.jdsoft.dms.dao.FolderDAO]: AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.FolderDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:41,544 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'folderDAO' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,546 org.springframework.beans.factory.annotation.InjectionMetadata inject - Processing injected element of bean 'folderDAO': AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.FolderDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:41,554 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:41,555 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:41,558 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,567 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'dataSource'
[DEBUG] 2016-05-02 17:37:41,567 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'dataSource'
[DEBUG] 2016-05-02 17:37:41,574 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,617 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'ds'
[DEBUG] 2016-05-02 17:37:41,618 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'ds'
[DEBUG] 2016-05-02 17:37:41,618 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'ds' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:41,621 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:41,622 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'ds'
[DEBUG] 2016-05-02 17:37:41,627 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'ds'
[DEBUG] 2016-05-02 17:37:41,628 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'ds'
[DEBUG] 2016-05-02 17:37:41,629 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'ds'
[DEBUG] 2016-05-02 17:37:41,629 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:41,631 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'dataSource'
[DEBUG] 2016-05-02 17:37:41,644 org.springframework.beans.factory.support.DefaultListableBeanFactory invokeInitMethods - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[DEBUG] 2016-05-02 17:37:41,684 org.jboss.logging <clinit> - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[DEBUG] 2016-05-02 17:37:41,704 org.hibernate.type.BasicTypeRegistry register - Adding type registration boolean -> org.hibernate.type.BooleanType@245b4bdc
[DEBUG] 2016-05-02 17:37:41,704 org.hibernate.type.BasicTypeRegistry register - Adding type registration boolean -> org.hibernate.type.BooleanType@245b4bdc
[DEBUG] 2016-05-02 17:37:41,704 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@245b4bdc
[DEBUG] 2016-05-02 17:37:41,705 org.hibernate.type.BasicTypeRegistry register - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@16293aa2
[DEBUG] 2016-05-02 17:37:41,707 org.hibernate.type.BasicTypeRegistry register - Adding type registration true_false -> org.hibernate.type.TrueFalseType@478190fc
[DEBUG] 2016-05-02 17:37:41,708 org.hibernate.type.BasicTypeRegistry register - Adding type registration yes_no -> org.hibernate.type.YesNoType@35cabb2a
[DEBUG] 2016-05-02 17:37:41,710 org.hibernate.type.BasicTypeRegistry register - Adding type registration byte -> org.hibernate.type.ByteType@1d2adfbe
[DEBUG] 2016-05-02 17:37:41,711 org.hibernate.type.BasicTypeRegistry register - Adding type registration byte -> org.hibernate.type.ByteType@1d2adfbe
[DEBUG] 2016-05-02 17:37:41,711 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d2adfbe
[DEBUG] 2016-05-02 17:37:41,713 org.hibernate.type.BasicTypeRegistry register - Adding type registration character -> org.hibernate.type.CharacterType@74fe5c40
[DEBUG] 2016-05-02 17:37:41,713 org.hibernate.type.BasicTypeRegistry register - Adding type registration char -> org.hibernate.type.CharacterType@74fe5c40
[DEBUG] 2016-05-02 17:37:41,713 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74fe5c40
[DEBUG] 2016-05-02 17:37:41,716 org.hibernate.type.BasicTypeRegistry register - Adding type registration short -> org.hibernate.type.ShortType@57a3af25
[DEBUG] 2016-05-02 17:37:41,716 org.hibernate.type.BasicTypeRegistry register - Adding type registration short -> org.hibernate.type.ShortType@57a3af25
[DEBUG] 2016-05-02 17:37:41,716 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57a3af25
[DEBUG] 2016-05-02 17:37:41,718 org.hibernate.type.BasicTypeRegistry register - Adding type registration integer -> org.hibernate.type.IntegerType@c8c12ac
[DEBUG] 2016-05-02 17:37:41,718 org.hibernate.type.BasicTypeRegistry register - Adding type registration int -> org.hibernate.type.IntegerType@c8c12ac
[DEBUG] 2016-05-02 17:37:41,718 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c8c12ac
[DEBUG] 2016-05-02 17:37:41,721 org.hibernate.type.BasicTypeRegistry register - Adding type registration long -> org.hibernate.type.LongType@6069db50
[DEBUG] 2016-05-02 17:37:41,722 org.hibernate.type.BasicTypeRegistry register - Adding type registration long -> org.hibernate.type.LongType@6069db50
[DEBUG] 2016-05-02 17:37:41,722 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6069db50
[DEBUG] 2016-05-02 17:37:41,724 org.hibernate.type.BasicTypeRegistry register - Adding type registration float -> org.hibernate.type.FloatType@2f9f7dcf
[DEBUG] 2016-05-02 17:37:41,724 org.hibernate.type.BasicTypeRegistry register - Adding type registration float -> org.hibernate.type.FloatType@2f9f7dcf
[DEBUG] 2016-05-02 17:37:41,726 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f9f7dcf
[DEBUG] 2016-05-02 17:37:41,727 org.hibernate.type.BasicTypeRegistry register - Adding type registration double -> org.hibernate.type.DoubleType@7d8995e
[DEBUG] 2016-05-02 17:37:41,728 org.hibernate.type.BasicTypeRegistry register - Adding type registration double -> org.hibernate.type.DoubleType@7d8995e
[DEBUG] 2016-05-02 17:37:41,728 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d8995e
[DEBUG] 2016-05-02 17:37:41,731 org.hibernate.type.BasicTypeRegistry register - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3349e9bb
[DEBUG] 2016-05-02 17:37:41,731 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3349e9bb
[DEBUG] 2016-05-02 17:37:41,733 org.hibernate.type.BasicTypeRegistry register - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a3b5b47
[DEBUG] 2016-05-02 17:37:41,733 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a3b5b47
[DEBUG] 2016-05-02 17:37:41,735 org.hibernate.type.BasicTypeRegistry register - Adding type registration string -> org.hibernate.type.StringType@799f10e1
[DEBUG] 2016-05-02 17:37:41,735 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.String -> org.hibernate.type.StringType@799f10e1
[DEBUG] 2016-05-02 17:37:41,736 org.hibernate.type.BasicTypeRegistry register - Adding type registration url -> org.hibernate.type.UrlType@4562e04d
[DEBUG] 2016-05-02 17:37:41,737 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4562e04d
[DEBUG] 2016-05-02 17:37:41,740 org.hibernate.type.BasicTypeRegistry register - Adding type registration date -> org.hibernate.type.DateType@459e9125
[DEBUG] 2016-05-02 17:37:41,740 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.sql.Date -> org.hibernate.type.DateType@459e9125
[DEBUG] 2016-05-02 17:37:41,742 org.hibernate.type.BasicTypeRegistry register - Adding type registration time -> org.hibernate.type.TimeType@692f203f
[DEBUG] 2016-05-02 17:37:41,743 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@692f203f
[DEBUG] 2016-05-02 17:37:41,744 org.hibernate.type.BasicTypeRegistry register - Adding type registration timestamp -> org.hibernate.type.TimestampType@55182842
[DEBUG] 2016-05-02 17:37:41,745 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55182842
[DEBUG] 2016-05-02 17:37:41,745 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55182842
[DEBUG] 2016-05-02 17:37:41,746 org.hibernate.type.BasicTypeRegistry register - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5656be13
[DEBUG] 2016-05-02 17:37:41,748 org.hibernate.type.BasicTypeRegistry register - Adding type registration calendar -> org.hibernate.type.CalendarType@73a1e9a9
[DEBUG] 2016-05-02 17:37:41,749 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73a1e9a9
[DEBUG] 2016-05-02 17:37:41,749 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73a1e9a9
[DEBUG] 2016-05-02 17:37:41,750 org.hibernate.type.BasicTypeRegistry register - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4802796d
[DEBUG] 2016-05-02 17:37:41,752 org.hibernate.type.BasicTypeRegistry register - Adding type registration locale -> org.hibernate.type.LocaleType@1bb5a082
[DEBUG] 2016-05-02 17:37:41,752 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1bb5a082
[DEBUG] 2016-05-02 17:37:41,754 org.hibernate.type.BasicTypeRegistry register - Adding type registration currency -> org.hibernate.type.CurrencyType@33d512c1
[DEBUG] 2016-05-02 17:37:41,755 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@33d512c1
[DEBUG] 2016-05-02 17:37:41,756 org.hibernate.type.BasicTypeRegistry register - Adding type registration timezone -> org.hibernate.type.TimeZoneType@765d7657
[DEBUG] 2016-05-02 17:37:41,756 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@765d7657
[DEBUG] 2016-05-02 17:37:41,757 org.hibernate.type.BasicTypeRegistry register - Adding type registration class -> org.hibernate.type.ClassType@5e0e82ae
[DEBUG] 2016-05-02 17:37:41,757 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5e0e82ae
[DEBUG] 2016-05-02 17:37:41,759 org.hibernate.type.BasicTypeRegistry register - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3754a4bf
[DEBUG] 2016-05-02 17:37:41,760 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3754a4bf
[DEBUG] 2016-05-02 17:37:41,760 org.hibernate.type.BasicTypeRegistry register - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@175c2241
[DEBUG] 2016-05-02 17:37:41,761 org.hibernate.type.BasicTypeRegistry register - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7c7a06ec
[DEBUG] 2016-05-02 17:37:41,762 org.hibernate.type.BasicTypeRegistry register - Adding type registration binary -> org.hibernate.type.BinaryType@3c46e67a
[DEBUG] 2016-05-02 17:37:41,763 org.hibernate.type.BasicTypeRegistry register - Adding type registration byte[] -> org.hibernate.type.BinaryType@3c46e67a
[DEBUG] 2016-05-02 17:37:41,763 org.hibernate.type.BasicTypeRegistry register - Adding type registration [B -> org.hibernate.type.BinaryType@3c46e67a
[DEBUG] 2016-05-02 17:37:41,764 org.hibernate.type.BasicTypeRegistry register - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36ebc363
[DEBUG] 2016-05-02 17:37:41,764 org.hibernate.type.BasicTypeRegistry register - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36ebc363
[DEBUG] 2016-05-02 17:37:41,766 org.hibernate.type.BasicTypeRegistry register - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36ebc363
[DEBUG] 2016-05-02 17:37:41,767 org.hibernate.type.BasicTypeRegistry register - Adding type registration image -> org.hibernate.type.ImageType@38425407
[DEBUG] 2016-05-02 17:37:41,768 org.hibernate.type.BasicTypeRegistry register - Adding type registration characters -> org.hibernate.type.CharArrayType@6025e1b6
[DEBUG] 2016-05-02 17:37:41,768 org.hibernate.type.BasicTypeRegistry register - Adding type registration char[] -> org.hibernate.type.CharArrayType@6025e1b6
[DEBUG] 2016-05-02 17:37:41,769 org.hibernate.type.BasicTypeRegistry register - Adding type registration [C -> org.hibernate.type.CharArrayType@6025e1b6
[DEBUG] 2016-05-02 17:37:41,770 org.hibernate.type.BasicTypeRegistry register - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5b12b668
[DEBUG] 2016-05-02 17:37:41,770 org.hibernate.type.BasicTypeRegistry register - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5b12b668
[DEBUG] 2016-05-02 17:37:41,770 org.hibernate.type.BasicTypeRegistry register - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5b12b668
[DEBUG] 2016-05-02 17:37:41,771 org.hibernate.type.BasicTypeRegistry register - Adding type registration text -> org.hibernate.type.TextType@815b41f
[DEBUG] 2016-05-02 17:37:41,779 org.hibernate.type.BasicTypeRegistry register - Adding type registration blob -> org.hibernate.type.BlobType@1fa121e2
[DEBUG] 2016-05-02 17:37:41,779 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1fa121e2
[DEBUG] 2016-05-02 17:37:41,780 org.hibernate.type.BasicTypeRegistry register - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62ddbd7e
[DEBUG] 2016-05-02 17:37:41,785 org.hibernate.type.BasicTypeRegistry register - Adding type registration clob -> org.hibernate.type.ClobType@367ffa75
[DEBUG] 2016-05-02 17:37:41,786 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@367ffa75
[DEBUG] 2016-05-02 17:37:41,786 org.hibernate.type.BasicTypeRegistry register - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1c1bbc4e
[DEBUG] 2016-05-02 17:37:41,788 org.hibernate.type.BasicTypeRegistry register - Adding type registration serializable -> org.hibernate.type.SerializableType@7a8c8dcf
[DEBUG] 2016-05-02 17:37:41,792 org.hibernate.type.BasicTypeRegistry register - Adding type registration object -> org.hibernate.type.ObjectType@65e98b1c
[DEBUG] 2016-05-02 17:37:41,792 org.hibernate.type.BasicTypeRegistry register - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65e98b1c
[DEBUG] 2016-05-02 17:37:41,793 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@510f3d34
[DEBUG] 2016-05-02 17:37:41,793 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7817fd62
[DEBUG] 2016-05-02 17:37:41,794 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8297b3a
[DEBUG] 2016-05-02 17:37:41,794 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2362f559
[DEBUG] 2016-05-02 17:37:41,794 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b2c9a9c
[DEBUG] 2016-05-02 17:37:41,794 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c178a76
[DEBUG] 2016-05-02 17:37:41,794 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@fa4c865
[DEBUG] 2016-05-02 17:37:41,795 org.hibernate.type.BasicTypeRegistry register - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3bd82cf5
[INFO] 2016-05-02 17:37:41,823 org.hibernate.annotations.common.Version <clinit> - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
[INFO] 2016-05-02 17:37:41,831 org.hibernate.Version logVersion - HHH000412: Hibernate Core {4.1.9.Final}
[INFO] 2016-05-02 17:37:41,833 org.hibernate.cfg.Environment <clinit> - HHH000206: hibernate.properties not found
[INFO] 2016-05-02 17:37:41,836 org.hibernate.cfg.Environment buildBytecodeProvider - HHH000021: Bytecode provider name : javassist
[DEBUG] 2016-05-02 17:37:41,851 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2016-05-02 17:37:41,852 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2016-05-02 17:37:41,854 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2016-05-02 17:37:41,854 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2016-05-02 17:37:41,855 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[DEBUG] 2016-05-02 17:37:41,856 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2016-05-02 17:37:41,858 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2016-05-02 17:37:41,859 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2016-05-02 17:37:41,860 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[DEBUG] 2016-05-02 17:37:41,861 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2016-05-02 17:37:41,862 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2016-05-02 17:37:41,863 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2016-05-02 17:37:41,864 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2016-05-02 17:37:41,866 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2016-05-02 17:37:41,867 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory register - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2016-05-02 17:37:41,873 org.springframework.core.io.support.PathMatchingResourcePatternResolver doFindPathMatchingJarResources - Looking for matching resources in jar file [file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar]
[DEBUG] 2016-05-02 17:37:41,914 org.springframework.core.io.support.PathMatchingResourcePatternResolver findPathMatchingResources - Resolved location pattern [classpath*:in/jdsoft/dms/model/**/*.class] to resources [URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/Document.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/UsersAccess.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/DocumentHistory.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/Folder.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/UsersRole.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/DataSource.class], URL [jar:file:/C:/Users/administrator/git/educationmanagement/EducationManagementSystem/WebContent/WEB-INF/lib/DMS.jar!/in/jdsoft/dms/model/Users.class]]
[DEBUG] 2016-05-02 17:37:41,947 org.hibernate.integrator.internal.IntegratorServiceImpl addIntegrator - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2016-05-02 17:37:41,984 org.hibernate.cfg.Configuration buildSessionFactory - Preparing to build session factory with filters : {}
[DEBUG] 2016-05-02 17:37:42,019 org.hibernate.cfg.Configuration processHbmXmlQueue - Processing hbm.xml files
[DEBUG] 2016-05-02 17:37:42,019 org.hibernate.cfg.Configuration processAnnotatedClassesQueue - Process annotated classes
[DEBUG] 2016-05-02 17:37:42,025 org.hibernate.cfg.AnnotationBinder bindClass - Binding entity from annotated class: in.jdsoft.dms.model.Document
[DEBUG] 2016-05-02 17:37:42,059 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2016-05-02 17:37:42,061 org.hibernate.cfg.AnnotationBinder determineSharedCacheMode - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[DEBUG] 2016-05-02 17:37:42,068 org.hibernate.cfg.annotations.EntityBinder bindEntity - Import with entity name Document
[DEBUG] 2016-05-02 17:37:42,072 org.hibernate.cfg.annotations.EntityBinder bindTable - Bind entity in.jdsoft.dms.model.Document on table document
[DEBUG] 2016-05-02 17:37:42,103 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=document_id, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,109 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property documentId with lazy=false
[DEBUG] 2016-05-02 17:37:42,112 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for documentId
[DEBUG] 2016-05-02 17:37:42,114 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property documentId
[DEBUG] 2016-05-02 17:37:42,118 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=document_access, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,119 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property documentAccess with lazy=false
[DEBUG] 2016-05-02 17:37:42,119 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for documentAccess
[DEBUG] 2016-05-02 17:37:42,119 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property documentAccess
[DEBUG] 2016-05-02 17:37:42,119 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=document_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,120 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property documentName with lazy=false
[DEBUG] 2016-05-02 17:37:42,120 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for documentName
[DEBUG] 2016-05-02 17:37:42,120 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property documentName
[DEBUG] 2016-05-02 17:37:42,121 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=document_uuid, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,122 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property documentUuid with lazy=false
[DEBUG] 2016-05-02 17:37:42,122 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for documentUuid
[DEBUG] 2016-05-02 17:37:42,122 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property documentUuid
[DEBUG] 2016-05-02 17:37:42,123 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=edit_information, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,123 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property editInformation with lazy=false
[DEBUG] 2016-05-02 17:37:42,124 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for editInformation
[DEBUG] 2016-05-02 17:37:42,124 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property editInformation
[DEBUG] 2016-05-02 17:37:42,124 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=edit_status, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,125 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property editStatus with lazy=false
[DEBUG] 2016-05-02 17:37:42,125 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for editStatus
[DEBUG] 2016-05-02 17:37:42,126 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property editStatus
[DEBUG] 2016-05-02 17:37:42,126 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=lock_information, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,126 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property lockInformation with lazy=false
[DEBUG] 2016-05-02 17:37:42,127 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for lockInformation
[DEBUG] 2016-05-02 17:37:42,127 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property lockInformation
[DEBUG] 2016-05-02 17:37:42,128 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=lock_status, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,128 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property lockStatus with lazy=false
[DEBUG] 2016-05-02 17:37:42,129 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for lockStatus
[DEBUG] 2016-05-02 17:37:42,129 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property lockStatus
[DEBUG] 2016-05-02 17:37:42,129 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document), mappingColumn=path, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,130 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property path with lazy=false
[DEBUG] 2016-05-02 17:37:42,130 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for path
[DEBUG] 2016-05-02 17:37:42,130 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property path
[DEBUG] 2016-05-02 17:37:42,133 org.hibernate.cfg.AnnotationBinder bindClass - Binding entity from annotated class: in.jdsoft.dms.model.UsersAccess
[DEBUG] 2016-05-02 17:37:42,133 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2016-05-02 17:37:42,133 org.hibernate.cfg.AnnotationBinder determineSharedCacheMode - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[DEBUG] 2016-05-02 17:37:42,134 org.hibernate.cfg.annotations.EntityBinder bindEntity - Import with entity name UsersAccess
[DEBUG] 2016-05-02 17:37:42,134 org.hibernate.cfg.annotations.EntityBinder bindTable - Bind entity in.jdsoft.dms.model.UsersAccess on table users_access
[DEBUG] 2016-05-02 17:37:42,135 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users_access), mappingColumn=users_access_id, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,136 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property usersAccessId with lazy=false
[DEBUG] 2016-05-02 17:37:42,136 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for usersAccessId
[DEBUG] 2016-05-02 17:37:42,136 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property usersAccessId
[DEBUG] 2016-05-02 17:37:42,137 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users_access), mappingColumn=user_control, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,137 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userControl with lazy=false
[DEBUG] 2016-05-02 17:37:42,137 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userControl
[DEBUG] 2016-05-02 17:37:42,137 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userControl
[DEBUG] 2016-05-02 17:37:42,138 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users_access), mappingColumn=user_role_id, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,138 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userRoleId with lazy=false
[DEBUG] 2016-05-02 17:37:42,138 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userRoleId
[DEBUG] 2016-05-02 17:37:42,138 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userRoleId
[DEBUG] 2016-05-02 17:37:42,139 org.hibernate.cfg.AnnotationBinder bindClass - Binding entity from annotated class: in.jdsoft.dms.model.DocumentHistory
[DEBUG] 2016-05-02 17:37:42,139 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2016-05-02 17:37:42,139 org.hibernate.cfg.AnnotationBinder determineSharedCacheMode - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[DEBUG] 2016-05-02 17:37:42,140 org.hibernate.cfg.annotations.EntityBinder bindEntity - Import with entity name DocumentHistory
[DEBUG] 2016-05-02 17:37:42,140 org.hibernate.cfg.annotations.EntityBinder bindTable - Bind entity in.jdsoft.dms.model.DocumentHistory on table document_history
[DEBUG] 2016-05-02 17:37:42,146 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document_history), mappingColumn=document_history_id, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,147 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property documentHistoryId with lazy=false
[DEBUG] 2016-05-02 17:37:42,147 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for documentHistoryId
[DEBUG] 2016-05-02 17:37:42,147 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property documentHistoryId
[DEBUG] 2016-05-02 17:37:42,147 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document_history), mappingColumn=author, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,148 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property author with lazy=false
[DEBUG] 2016-05-02 17:37:42,161 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for author
[DEBUG] 2016-05-02 17:37:42,161 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property author
[DEBUG] 2016-05-02 17:37:42,161 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document_history), mappingColumn=content, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,162 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property content with lazy=false
[DEBUG] 2016-05-02 17:37:42,162 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for content
[DEBUG] 2016-05-02 17:37:42,163 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property content
[DEBUG] 2016-05-02 17:37:42,163 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document_history), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,164 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2016-05-02 17:37:42,165 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for date
[DEBUG] 2016-05-02 17:37:42,165 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property date
[DEBUG] 2016-05-02 17:37:42,165 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document_history), mappingColumn=document_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,166 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property documentId with lazy=false
[DEBUG] 2016-05-02 17:37:42,166 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for documentId
[DEBUG] 2016-05-02 17:37:42,166 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property documentId
[DEBUG] 2016-05-02 17:37:42,167 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.document_history), mappingColumn=version, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,167 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property version with lazy=false
[DEBUG] 2016-05-02 17:37:42,167 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for version
[DEBUG] 2016-05-02 17:37:42,167 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property version
[DEBUG] 2016-05-02 17:37:42,167 org.hibernate.cfg.AnnotationBinder bindClass - Binding entity from annotated class: in.jdsoft.dms.model.Folder
[DEBUG] 2016-05-02 17:37:42,168 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2016-05-02 17:37:42,168 org.hibernate.cfg.AnnotationBinder determineSharedCacheMode - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[DEBUG] 2016-05-02 17:37:42,168 org.hibernate.cfg.annotations.EntityBinder bindEntity - Import with entity name Folder
[DEBUG] 2016-05-02 17:37:42,168 org.hibernate.cfg.annotations.EntityBinder bindTable - Bind entity in.jdsoft.dms.model.Folder on table folder
[DEBUG] 2016-05-02 17:37:42,171 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=folder_id, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,171 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property folderId with lazy=false
[DEBUG] 2016-05-02 17:37:42,172 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for folderId
[DEBUG] 2016-05-02 17:37:42,172 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property folderId
[DEBUG] 2016-05-02 17:37:42,172 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=created_by, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,172 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property createdBy with lazy=false
[DEBUG] 2016-05-02 17:37:42,173 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for createdBy
[DEBUG] 2016-05-02 17:37:42,173 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property createdBy
[DEBUG] 2016-05-02 17:37:42,173 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=created_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,173 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2016-05-02 17:37:42,174 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for createdDate
[DEBUG] 2016-05-02 17:37:42,174 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property createdDate
[DEBUG] 2016-05-02 17:37:42,175 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=folder_code, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,175 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property folderCode with lazy=false
[DEBUG] 2016-05-02 17:37:42,175 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for folderCode
[DEBUG] 2016-05-02 17:37:42,176 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property folderCode
[DEBUG] 2016-05-02 17:37:42,176 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=folder_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,176 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property folderName with lazy=false
[DEBUG] 2016-05-02 17:37:42,176 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for folderName
[DEBUG] 2016-05-02 17:37:42,177 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property folderName
[DEBUG] 2016-05-02 17:37:42,177 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=modified_by, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,177 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property modifiedBy with lazy=false
[DEBUG] 2016-05-02 17:37:42,177 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for modifiedBy
[DEBUG] 2016-05-02 17:37:42,178 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property modifiedBy
[DEBUG] 2016-05-02 17:37:42,178 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=modified_date, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,178 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2016-05-02 17:37:42,179 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for modifiedDate
[DEBUG] 2016-05-02 17:37:42,179 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property modifiedDate
[DEBUG] 2016-05-02 17:37:42,179 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.folder), mappingColumn=parent_folder_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,180 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property parentFolderId with lazy=false
[DEBUG] 2016-05-02 17:37:42,180 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for parentFolderId
[DEBUG] 2016-05-02 17:37:42,180 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property parentFolderId
[DEBUG] 2016-05-02 17:37:42,181 org.hibernate.cfg.AnnotationBinder bindClass - Binding entity from annotated class: in.jdsoft.dms.model.UsersRole
[DEBUG] 2016-05-02 17:37:42,181 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2016-05-02 17:37:42,181 org.hibernate.cfg.AnnotationBinder determineSharedCacheMode - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[DEBUG] 2016-05-02 17:37:42,182 org.hibernate.cfg.annotations.EntityBinder bindEntity - Import with entity name UsersRole
[DEBUG] 2016-05-02 17:37:42,182 org.hibernate.cfg.annotations.EntityBinder bindTable - Bind entity in.jdsoft.dms.model.UsersRole on table users_role
[DEBUG] 2016-05-02 17:37:42,184 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users_role), mappingColumn=user_role_id, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,184 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userRoleId with lazy=false
[DEBUG] 2016-05-02 17:37:42,185 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userRoleId
[DEBUG] 2016-05-02 17:37:42,185 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userRoleId
[DEBUG] 2016-05-02 17:37:42,186 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users_role), mappingColumn=role_name, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,186 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2016-05-02 17:37:42,186 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for roleName
[DEBUG] 2016-05-02 17:37:42,187 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property roleName
[DEBUG] 2016-05-02 17:37:42,187 org.hibernate.cfg.AnnotationBinder bindClass - Binding entity from annotated class: in.jdsoft.dms.model.Users
[DEBUG] 2016-05-02 17:37:42,187 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2016-05-02 17:37:42,188 org.hibernate.cfg.AnnotationBinder determineSharedCacheMode - No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[DEBUG] 2016-05-02 17:37:42,188 org.hibernate.cfg.annotations.EntityBinder bindEntity - Import with entity name Users
[DEBUG] 2016-05-02 17:37:42,188 org.hibernate.cfg.annotations.EntityBinder bindTable - Bind entity in.jdsoft.dms.model.Users on table users
[DEBUG] 2016-05-02 17:37:42,190 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users), mappingColumn=user_id, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,190 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2016-05-02 17:37:42,191 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userId
[DEBUG] 2016-05-02 17:37:42,191 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userId
[DEBUG] 2016-05-02 17:37:42,191 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users), mappingColumn=folder_code, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,191 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property folderCode with lazy=false
[DEBUG] 2016-05-02 17:37:42,192 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for folderCode
[DEBUG] 2016-05-02 17:37:42,192 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property folderCode
[DEBUG] 2016-05-02 17:37:42,192 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users), mappingColumn=user_email, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,192 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userEmail with lazy=false
[DEBUG] 2016-05-02 17:37:42,193 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userEmail
[DEBUG] 2016-05-02 17:37:42,193 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userEmail
[DEBUG] 2016-05-02 17:37:42,193 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users), mappingColumn=user_name, insertable=true, updatable=true, unique=true}
[DEBUG] 2016-05-02 17:37:42,193 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2016-05-02 17:37:42,194 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userName
[DEBUG] 2016-05-02 17:37:42,194 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userName
[DEBUG] 2016-05-02 17:37:42,194 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,194 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2016-05-02 17:37:42,195 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userPassword
[DEBUG] 2016-05-02 17:37:42,195 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userPassword
[DEBUG] 2016-05-02 17:37:42,195 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,195 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userRole with lazy=false
[DEBUG] 2016-05-02 17:37:42,195 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userRole
[DEBUG] 2016-05-02 17:37:42,196 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userRole
[DEBUG] 2016-05-02 17:37:42,196 org.hibernate.cfg.Ejb3Column bind - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mua_database.users), mappingColumn=user_status, insertable=true, updatable=true, unique=false}
[DEBUG] 2016-05-02 17:37:42,196 org.hibernate.cfg.annotations.PropertyBinder makePropertyAndValue - MetadataSourceProcessor property userStatus with lazy=false
[DEBUG] 2016-05-02 17:37:42,196 org.hibernate.cfg.annotations.SimpleValueBinder make - building SimpleValue for userStatus
[DEBUG] 2016-05-02 17:37:42,197 org.hibernate.cfg.annotations.PropertyBinder makeProperty - Building property userStatus
[DEBUG] 2016-05-02 17:37:42,198 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for documentId
[DEBUG] 2016-05-02 17:37:42,198 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for documentAccess
[DEBUG] 2016-05-02 17:37:42,198 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for documentName
[DEBUG] 2016-05-02 17:37:42,198 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for documentUuid
[DEBUG] 2016-05-02 17:37:42,198 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for editInformation
[DEBUG] 2016-05-02 17:37:42,199 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for editStatus
[DEBUG] 2016-05-02 17:37:42,199 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for lockInformation
[DEBUG] 2016-05-02 17:37:42,199 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for lockStatus
[DEBUG] 2016-05-02 17:37:42,199 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for path
[DEBUG] 2016-05-02 17:37:42,199 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for usersAccessId
[DEBUG] 2016-05-02 17:37:42,200 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userControl
[DEBUG] 2016-05-02 17:37:42,200 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userRoleId
[DEBUG] 2016-05-02 17:37:42,200 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for documentHistoryId
[DEBUG] 2016-05-02 17:37:42,200 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for author
[DEBUG] 2016-05-02 17:37:42,200 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for content
[DEBUG] 2016-05-02 17:37:42,200 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for date
[DEBUG] 2016-05-02 17:37:42,201 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for documentId
[DEBUG] 2016-05-02 17:37:42,201 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for version
[DEBUG] 2016-05-02 17:37:42,201 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for folderId
[DEBUG] 2016-05-02 17:37:42,201 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for createdBy
[DEBUG] 2016-05-02 17:37:42,201 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for createdDate
[DEBUG] 2016-05-02 17:37:42,202 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for folderCode
[DEBUG] 2016-05-02 17:37:42,202 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for folderName
[DEBUG] 2016-05-02 17:37:42,202 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for modifiedBy
[DEBUG] 2016-05-02 17:37:42,202 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for modifiedDate
[DEBUG] 2016-05-02 17:37:42,202 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for parentFolderId
[DEBUG] 2016-05-02 17:37:42,202 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userRoleId
[DEBUG] 2016-05-02 17:37:42,203 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for roleName
[DEBUG] 2016-05-02 17:37:42,203 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userId
[DEBUG] 2016-05-02 17:37:42,203 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for folderCode
[DEBUG] 2016-05-02 17:37:42,203 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userEmail
[DEBUG] 2016-05-02 17:37:42,203 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userName
[DEBUG] 2016-05-02 17:37:42,204 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userPassword
[DEBUG] 2016-05-02 17:37:42,204 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userRole
[DEBUG] 2016-05-02 17:37:42,204 org.hibernate.cfg.annotations.SimpleValueBinder fillSimpleValue - Setting SimpleValue typeName for userStatus
[DEBUG] 2016-05-02 17:37:42,205 org.hibernate.cfg.Configuration processFkSecondPassInOrder - Processing fk mappings (*ToOne and JoinedSubclass)
[DEBUG] 2016-05-02 17:37:42,206 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing extends queue
[DEBUG] 2016-05-02 17:37:42,206 org.hibernate.cfg.Configuration processExtendsQueue - Processing extends queue
[DEBUG] 2016-05-02 17:37:42,207 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing collection mappings
[DEBUG] 2016-05-02 17:37:42,207 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing native query and ResultSetMapping mappings
[DEBUG] 2016-05-02 17:37:42,207 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing association property references
[DEBUG] 2016-05-02 17:37:42,207 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing foreign key constraints
[DEBUG] 2016-05-02 17:37:42,737 org.hibernate.engine.jdbc.internal.JdbcServicesImpl configure - Database ->
       name : MySQL
    version : 5.6.24
      major : 5
      minor : 6
[DEBUG] 2016-05-02 17:37:42,737 org.hibernate.engine.jdbc.internal.JdbcServicesImpl configure - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.38 ( Revision: fe541c166cec739c74cc727c5da96c1028b4834a )
      major : 5
      minor : 1
[DEBUG] 2016-05-02 17:37:42,738 org.hibernate.engine.jdbc.internal.JdbcServicesImpl configure - JDBC version : 4.0
[INFO] 2016-05-02 17:37:42,801 org.hibernate.dialect.Dialect <init> - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[INFO] 2016-05-02 17:37:42,819 org.hibernate.engine.jdbc.internal.LobCreatorBuilder useContextualLobCreation - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[DEBUG] 2016-05-02 17:37:42,841 org.hibernate.cfg.SettingsFactory buildSettings - Automatic flush during beforeCompletion(): disabled
[DEBUG] 2016-05-02 17:37:42,842 org.hibernate.cfg.SettingsFactory buildSettings - Automatic session close at end of transaction: disabled
[DEBUG] 2016-05-02 17:37:42,842 org.hibernate.cfg.SettingsFactory buildSettings - JDBC batch size: 15
[DEBUG] 2016-05-02 17:37:42,842 org.hibernate.cfg.SettingsFactory buildSettings - JDBC batch updates for versioned data: disabled
[DEBUG] 2016-05-02 17:37:42,843 org.hibernate.cfg.SettingsFactory buildSettings - Scrollable result sets: enabled
[DEBUG] 2016-05-02 17:37:42,843 org.hibernate.cfg.SettingsFactory buildSettings - Wrap result sets: disabled
[DEBUG] 2016-05-02 17:37:42,843 org.hibernate.cfg.SettingsFactory buildSettings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2016-05-02 17:37:42,843 org.hibernate.cfg.SettingsFactory buildSettings - multi-tenancy strategy : NONE
[DEBUG] 2016-05-02 17:37:42,844 org.hibernate.cfg.SettingsFactory buildSettings - Connection release mode: auto
[INFO] 2016-05-02 17:37:42,844 org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService - HHH000399: Using default transaction strategy (direct JDBC transactions)
[DEBUG] 2016-05-02 17:37:42,849 org.hibernate.cfg.SettingsFactory buildSettings - Maximum outer join fetch depth: 2
[DEBUG] 2016-05-02 17:37:42,849 org.hibernate.cfg.SettingsFactory buildSettings - Default batch fetch size: 1
[DEBUG] 2016-05-02 17:37:42,849 org.hibernate.cfg.SettingsFactory buildSettings - Generate SQL with comments: disabled
[DEBUG] 2016-05-02 17:37:42,850 org.hibernate.cfg.SettingsFactory buildSettings - Order SQL updates by primary key: disabled
[DEBUG] 2016-05-02 17:37:42,850 org.hibernate.cfg.SettingsFactory buildSettings - Order SQL inserts for batching: disabled
[DEBUG] 2016-05-02 17:37:42,850 org.hibernate.cfg.SettingsFactory createQueryTranslatorFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[INFO] 2016-05-02 17:37:42,854 org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory <init> - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2016-05-02 17:37:42,854 org.hibernate.cfg.SettingsFactory buildSettings - Query language substitutions: {}
[DEBUG] 2016-05-02 17:37:42,854 org.hibernate.cfg.SettingsFactory buildSettings - JPA-QL strict compliance: disabled
[DEBUG] 2016-05-02 17:37:42,855 org.hibernate.cfg.SettingsFactory buildSettings - Second-level cache: enabled
[DEBUG] 2016-05-02 17:37:42,862 org.hibernate.cfg.SettingsFactory buildSettings - Query cache: disabled
[DEBUG] 2016-05-02 17:37:42,862 org.hibernate.cfg.SettingsFactory createRegionFactory - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2016-05-02 17:37:42,864 org.hibernate.cfg.SettingsFactory createRegionFactory - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
[DEBUG] 2016-05-02 17:37:42,865 org.hibernate.cfg.SettingsFactory buildSettings - Optimize cache for minimal puts: disabled
[DEBUG] 2016-05-02 17:37:42,865 org.hibernate.cfg.SettingsFactory buildSettings - Structured second-level cache entries: disabled
[DEBUG] 2016-05-02 17:37:42,865 org.hibernate.cfg.SettingsFactory buildSettings - Statistics: disabled
[DEBUG] 2016-05-02 17:37:42,865 org.hibernate.cfg.SettingsFactory buildSettings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2016-05-02 17:37:42,866 org.hibernate.cfg.SettingsFactory buildSettings - Default entity-mode: pojo
[DEBUG] 2016-05-02 17:37:42,866 org.hibernate.cfg.SettingsFactory buildSettings - Named query checking : enabled
[DEBUG] 2016-05-02 17:37:42,866 org.hibernate.cfg.SettingsFactory buildSettings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2016-05-02 17:37:42,867 org.hibernate.cfg.SettingsFactory buildSettings - Allow initialization of lazy state outside session : : disabled
[DEBUG] 2016-05-02 17:37:42,882 org.hibernate.internal.SessionFactoryImpl <init> - Building session factory
[DEBUG] 2016-05-02 17:37:42,898 org.hibernate.internal.SessionFactoryImpl <init> - Session factory constructed with filter configurations : {}
[DEBUG] 2016-05-02 17:37:42,898 org.hibernate.internal.SessionFactoryImpl <init> - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, java.vm.version=25.73-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\administrator\git\educationmanagement\EducationManagementSystem, java.runtime.version=1.8.0_73-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_73/bin/server;C:/Program Files/Java/jre1.8.0_73/bin;C:/Program Files/Java/jre1.8.0_73/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Broadcom\Broadcom 802.11\Driver;%JAVA_HOME%\bin;C:\ecllipse\eclipse;;., hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@73302995, java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=C:\Users\administrator, user.timezone=Asia/Calcutta, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, user.name=Administrator, java.class.path=C:\Users\administrator\git\educationmanagement\EducationManagementSystem\target\classes;C:\xampp\tomcat\lib\annotations-api.jar;C:\xampp\tomcat\lib\catalina-ant.jar;C:\xampp\tomcat\lib\catalina-ha.jar;C:\xampp\tomcat\lib\catalina-tribes.jar;C:\xampp\tomcat\lib\catalina.jar;C:\xampp\tomcat\lib\ecj-4.4.jar;C:\xampp\tomcat\lib\el-api.jar;C:\xampp\tomcat\lib\jasper-el.jar;C:\xampp\tomcat\lib\jasper.jar;C:\xampp\tomcat\lib\jsp-api.jar;C:\xampp\tomcat\lib\servlet-api.jar;C:\xampp\tomcat\lib\tomcat-api.jar;C:\xampp\tomcat\lib\tomcat-coyote.jar;C:\xampp\tomcat\lib\tomcat-dbcp.jar;C:\xampp\tomcat\lib\tomcat-i18n-es.jar;C:\xampp\tomcat\lib\tomcat-i18n-fr.jar;C:\xampp\tomcat\lib\tomcat-i18n-ja.jar;C:\xampp\tomcat\lib\tomcat-jdbc.jar;C:\xampp\tomcat\lib\tomcat-util.jar;C:\xampp\tomcat\lib\tomcat7-websocket.jar;C:\xampp\tomcat\lib\websocket-api.jar;C:\Users\administrator\git\educationmanagement\EducationManagementSystem\WebContent\WEB-INF\lib\DMS.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-core\3.2.14.RELEASE\spring-core-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-context\3.2.14.RELEASE\spring-context-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-aop\3.2.14.RELEASE\spring-aop-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-expression\3.2.14.RELEASE\spring-expression-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-tx\3.2.14.RELEASE\spring-tx-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-orm\3.2.14.RELEASE\spring-orm-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-jdbc\3.2.14.RELEASE\spring-jdbc-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\security\spring-security-core\3.2.9.RELEASE\spring-security-core-3.2.9.RELEASE.jar;C:\Users\administrator\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-webmvc\3.2.14.RELEASE\spring-webmvc-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-web\3.2.14.RELEASE\spring-web-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-beans\3.2.14.RELEASE\spring-beans-3.2.14.RELEASE.jar;C:\Users\administrator\.m2\repository\commons-dbcp\commons-dbcp\1.2.2\commons-dbcp-1.2.2.jar;C:\Users\administrator\.m2\repository\commons-pool\commons-pool\1.3\commons-pool-1.3.jar;C:\Users\administrator\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\administrator\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\administrator\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\administrator\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\administrator\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\administrator\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\administrator\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\administrator\.m2\repository\mysql\mysql-connector-java\5.1.38\mysql-connector-java-5.1.38.jar;C:\Users\administrator\.m2\repository\commons-io\commons-io\1.3.2\commons-io-1.3.2.jar;C:\Users\administrator\.m2\repository\commons-fileupload\commons-fileupload\1.2.1\commons-fileupload-1.2.1.jar;C:\Users\administrator\.m2\repository\com\google\code\gson\gson\2.2.2\gson-2.2.2.jar;C:\Users\administrator\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\administrator\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\administrator\.m2\repository\taglibs\standard\1.1.2\standard-1.1.2.jar;C:\Users\administrator\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\administrator\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\administrator\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\administrator\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\administrator\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\administrator\.m2\repository\com\sun\mail\javax.mail\1.5.5\javax.mail-1.5.5.jar;C:\Users\administrator\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\administrator\.m2\repository\org\springframework\spring-context-support\3.2.14.RELEASE\spring-context-support-3.2.14.RELEASE.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@4e0e2f2a, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, sun.java.command=TestDMS, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_73, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
[DEBUG] 2016-05-02 17:37:42,918 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:42,919 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:42,919 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:42,920 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:42,920 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:42,920 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:43,144 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL - Static SQL for entity: in.jdsoft.dms.model.UsersRole
[DEBUG] 2016-05-02 17:37:43,145 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Version select: select user_role_id from mua_database.users_role where user_role_id =?
[DEBUG] 2016-05-02 17:37:43,145 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Snapshot select: select usersrole_.user_role_id, usersrole_.role_name as role2_4_ from mua_database.users_role usersrole_ where usersrole_.user_role_id=?
[DEBUG] 2016-05-02 17:37:43,145 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Insert 0: insert into mua_database.users_role (role_name, user_role_id) values (?, ?)
[DEBUG] 2016-05-02 17:37:43,145 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Update 0: update mua_database.users_role set role_name=? where user_role_id=?
[DEBUG] 2016-05-02 17:37:43,145 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Delete 0: delete from mua_database.users_role where user_role_id=?
[DEBUG] 2016-05-02 17:37:43,146 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Identity insert: insert into mua_database.users_role (role_name) values (?)
[DEBUG] 2016-05-02 17:37:43,156 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL - Static SQL for entity: in.jdsoft.dms.model.Users
[DEBUG] 2016-05-02 17:37:43,156 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Version select: select user_id from mua_database.users where user_id =?
[DEBUG] 2016-05-02 17:37:43,157 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Snapshot select: select users_.user_id, users_.folder_code as folder2_5_, users_.user_email as user3_5_, users_.user_name as user4_5_, users_.user_password as user5_5_, users_.user_role as user6_5_, users_.user_status as user7_5_ from mua_database.users users_ where users_.user_id=?
[DEBUG] 2016-05-02 17:37:43,157 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Insert 0: insert into mua_database.users (folder_code, user_email, user_name, user_password, user_role, user_status, user_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,157 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Update 0: update mua_database.users set folder_code=?, user_email=?, user_name=?, user_password=?, user_role=?, user_status=? where user_id=?
[DEBUG] 2016-05-02 17:37:43,158 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Delete 0: delete from mua_database.users where user_id=?
[DEBUG] 2016-05-02 17:37:43,158 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Identity insert: insert into mua_database.users (folder_code, user_email, user_name, user_password, user_role, user_status) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,164 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL - Static SQL for entity: in.jdsoft.dms.model.UsersAccess
[DEBUG] 2016-05-02 17:37:43,165 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Version select: select users_access_id from mua_database.users_access where users_access_id =?
[DEBUG] 2016-05-02 17:37:43,166 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Snapshot select: select usersacces_.users_access_id, usersacces_.user_control as user2_1_, usersacces_.user_role_id as user3_1_ from mua_database.users_access usersacces_ where usersacces_.users_access_id=?
[DEBUG] 2016-05-02 17:37:43,166 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Insert 0: insert into mua_database.users_access (user_control, user_role_id, users_access_id) values (?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,167 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Update 0: update mua_database.users_access set user_control=?, user_role_id=? where users_access_id=?
[DEBUG] 2016-05-02 17:37:43,167 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Delete 0: delete from mua_database.users_access where users_access_id=?
[DEBUG] 2016-05-02 17:37:43,167 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Identity insert: insert into mua_database.users_access (user_control, user_role_id) values (?, ?)
[DEBUG] 2016-05-02 17:37:43,178 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL - Static SQL for entity: in.jdsoft.dms.model.Document
[DEBUG] 2016-05-02 17:37:43,178 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Version select: select document_id from mua_database.document where document_id =?
[DEBUG] 2016-05-02 17:37:43,179 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Snapshot select: select document_.document_id, document_.document_access as document2_0_, document_.document_name as document3_0_, document_.document_uuid as document4_0_, document_.edit_information as edit5_0_, document_.edit_status as edit6_0_, document_.lock_information as lock7_0_, document_.lock_status as lock8_0_, document_.path as path0_ from mua_database.document document_ where document_.document_id=?
[DEBUG] 2016-05-02 17:37:43,179 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Insert 0: insert into mua_database.document (document_access, document_name, document_uuid, edit_information, edit_status, lock_information, lock_status, path, document_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,179 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Update 0: update mua_database.document set document_access=?, document_name=?, document_uuid=?, edit_information=?, edit_status=?, lock_information=?, lock_status=?, path=? where document_id=?
[DEBUG] 2016-05-02 17:37:43,180 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Delete 0: delete from mua_database.document where document_id=?
[DEBUG] 2016-05-02 17:37:43,180 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Identity insert: insert into mua_database.document (document_access, document_name, document_uuid, edit_information, edit_status, lock_information, lock_status, path) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,195 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL - Static SQL for entity: in.jdsoft.dms.model.DocumentHistory
[DEBUG] 2016-05-02 17:37:43,196 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Version select: select document_history_id from mua_database.document_history where document_history_id =?
[DEBUG] 2016-05-02 17:37:43,196 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Snapshot select: select documenthi_.document_history_id, documenthi_.author as author2_, documenthi_.content as content2_, documenthi_.date as date2_, documenthi_.document_id as document5_2_, documenthi_.version as version2_ from mua_database.document_history documenthi_ where documenthi_.document_history_id=?
[DEBUG] 2016-05-02 17:37:43,196 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Insert 0: insert into mua_database.document_history (author, content, date, document_id, version, document_history_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,197 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Update 0: update mua_database.document_history set author=?, content=?, date=?, document_id=?, version=? where document_history_id=?
[DEBUG] 2016-05-02 17:37:43,197 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Delete 0: delete from mua_database.document_history where document_history_id=?
[DEBUG] 2016-05-02 17:37:43,197 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Identity insert: insert into mua_database.document_history (author, content, date, document_id, version) values (?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,206 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL - Static SQL for entity: in.jdsoft.dms.model.Folder
[DEBUG] 2016-05-02 17:37:43,207 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Version select: select folder_id from mua_database.folder where folder_id =?
[DEBUG] 2016-05-02 17:37:43,207 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Snapshot select: select folder_.folder_id, folder_.created_by as created2_3_, folder_.created_date as created3_3_, folder_.folder_code as folder4_3_, folder_.folder_name as folder5_3_, folder_.modified_by as modified6_3_, folder_.modified_date as modified7_3_, folder_.parent_folder_id as parent8_3_ from mua_database.folder folder_ where folder_.folder_id=?
[DEBUG] 2016-05-02 17:37:43,207 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Insert 0: insert into mua_database.folder (created_by, created_date, folder_code, folder_name, modified_by, modified_date, parent_folder_id, folder_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,208 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Update 0: update mua_database.folder set created_by=?, created_date=?, folder_code=?, folder_name=?, modified_by=?, modified_date=?, parent_folder_id=? where folder_id=?
[DEBUG] 2016-05-02 17:37:43,208 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Delete 0: delete from mua_database.folder where folder_id=?
[DEBUG] 2016-05-02 17:37:43,208 org.hibernate.persister.entity.AbstractEntityPersister logStaticSQL -  Identity insert: insert into mua_database.folder (created_by, created_date, folder_code, folder_name, modified_by, modified_date, parent_folder_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:43,242 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [NONE]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=?
[DEBUG] 2016-05-02 17:37:43,242 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [READ]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=?
[DEBUG] 2016-05-02 17:37:43,243 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [UPGRADE]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=? for update
[DEBUG] 2016-05-02 17:37:43,243 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [UPGRADE_NOWAIT]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=? for update
[DEBUG] 2016-05-02 17:37:43,244 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [FORCE]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=? for update
[DEBUG] 2016-05-02 17:37:43,244 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [PESSIMISTIC_READ]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=? lock in share mode
[DEBUG] 2016-05-02 17:37:43,245 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [PESSIMISTIC_WRITE]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=? for update
[DEBUG] 2016-05-02 17:37:43,245 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [PESSIMISTIC_FORCE_INCREMENT]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=? for update
[DEBUG] 2016-05-02 17:37:43,245 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [OPTIMISTIC]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=?
[DEBUG] 2016-05-02 17:37:43,246 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersRole [OPTIMISTIC_FORCE_INCREMENT]: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=?
[DEBUG] 2016-05-02 17:37:43,258 org.hibernate.loader.Loader <init> - Static select for action ACTION_MERGE on entity in.jdsoft.dms.model.UsersRole: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=?
[DEBUG] 2016-05-02 17:37:43,258 org.hibernate.loader.Loader <init> - Static select for action ACTION_REFRESH on entity in.jdsoft.dms.model.UsersRole: select usersrole0_.user_role_id as user1_4_0_, usersrole0_.role_name as role2_4_0_ from mua_database.users_role usersrole0_ where usersrole0_.user_role_id=?
[DEBUG] 2016-05-02 17:37:43,259 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [NONE]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=?
[DEBUG] 2016-05-02 17:37:43,260 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [READ]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=?
[DEBUG] 2016-05-02 17:37:43,260 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [UPGRADE]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=? for update
[DEBUG] 2016-05-02 17:37:43,261 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [UPGRADE_NOWAIT]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=? for update
[DEBUG] 2016-05-02 17:37:43,261 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [FORCE]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=? for update
[DEBUG] 2016-05-02 17:37:43,262 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [PESSIMISTIC_READ]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=? lock in share mode
[DEBUG] 2016-05-02 17:37:43,263 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [PESSIMISTIC_WRITE]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=? for update
[DEBUG] 2016-05-02 17:37:43,263 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [PESSIMISTIC_FORCE_INCREMENT]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=? for update
[DEBUG] 2016-05-02 17:37:43,264 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [OPTIMISTIC]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=?
[DEBUG] 2016-05-02 17:37:43,264 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Users [OPTIMISTIC_FORCE_INCREMENT]: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=?
[DEBUG] 2016-05-02 17:37:43,265 org.hibernate.loader.Loader <init> - Static select for action ACTION_MERGE on entity in.jdsoft.dms.model.Users: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=?
[DEBUG] 2016-05-02 17:37:43,265 org.hibernate.loader.Loader <init> - Static select for action ACTION_REFRESH on entity in.jdsoft.dms.model.Users: select users0_.user_id as user1_5_0_, users0_.folder_code as folder2_5_0_, users0_.user_email as user3_5_0_, users0_.user_name as user4_5_0_, users0_.user_password as user5_5_0_, users0_.user_role as user6_5_0_, users0_.user_status as user7_5_0_ from mua_database.users users0_ where users0_.user_id=?
[DEBUG] 2016-05-02 17:37:43,266 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [NONE]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=?
[DEBUG] 2016-05-02 17:37:43,266 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [READ]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=?
[DEBUG] 2016-05-02 17:37:43,267 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [UPGRADE]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=? for update
[DEBUG] 2016-05-02 17:37:43,267 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [UPGRADE_NOWAIT]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=? for update
[DEBUG] 2016-05-02 17:37:43,267 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [FORCE]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=? for update
[DEBUG] 2016-05-02 17:37:43,268 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [PESSIMISTIC_READ]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=? lock in share mode
[DEBUG] 2016-05-02 17:37:43,268 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [PESSIMISTIC_WRITE]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=? for update
[DEBUG] 2016-05-02 17:37:43,269 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [PESSIMISTIC_FORCE_INCREMENT]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=? for update
[DEBUG] 2016-05-02 17:37:43,269 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [OPTIMISTIC]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=?
[DEBUG] 2016-05-02 17:37:43,270 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.UsersAccess [OPTIMISTIC_FORCE_INCREMENT]: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=?
[DEBUG] 2016-05-02 17:37:43,270 org.hibernate.loader.Loader <init> - Static select for action ACTION_MERGE on entity in.jdsoft.dms.model.UsersAccess: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=?
[DEBUG] 2016-05-02 17:37:43,271 org.hibernate.loader.Loader <init> - Static select for action ACTION_REFRESH on entity in.jdsoft.dms.model.UsersAccess: select usersacces0_.users_access_id as users1_1_0_, usersacces0_.user_control as user2_1_0_, usersacces0_.user_role_id as user3_1_0_ from mua_database.users_access usersacces0_ where usersacces0_.users_access_id=?
[DEBUG] 2016-05-02 17:37:43,271 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [NONE]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=?
[DEBUG] 2016-05-02 17:37:43,272 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [READ]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=?
[DEBUG] 2016-05-02 17:37:43,272 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [UPGRADE]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=? for update
[DEBUG] 2016-05-02 17:37:43,273 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [UPGRADE_NOWAIT]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=? for update
[DEBUG] 2016-05-02 17:37:43,273 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [FORCE]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=? for update
[DEBUG] 2016-05-02 17:37:43,274 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [PESSIMISTIC_READ]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=? lock in share mode
[DEBUG] 2016-05-02 17:37:43,274 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [PESSIMISTIC_WRITE]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=? for update
[DEBUG] 2016-05-02 17:37:43,275 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [PESSIMISTIC_FORCE_INCREMENT]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=? for update
[DEBUG] 2016-05-02 17:37:43,276 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [OPTIMISTIC]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=?
[DEBUG] 2016-05-02 17:37:43,276 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Document [OPTIMISTIC_FORCE_INCREMENT]: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=?
[DEBUG] 2016-05-02 17:37:43,277 org.hibernate.loader.Loader <init> - Static select for action ACTION_MERGE on entity in.jdsoft.dms.model.Document: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=?
[DEBUG] 2016-05-02 17:37:43,277 org.hibernate.loader.Loader <init> - Static select for action ACTION_REFRESH on entity in.jdsoft.dms.model.Document: select document0_.document_id as document1_0_0_, document0_.document_access as document2_0_0_, document0_.document_name as document3_0_0_, document0_.document_uuid as document4_0_0_, document0_.edit_information as edit5_0_0_, document0_.edit_status as edit6_0_0_, document0_.lock_information as lock7_0_0_, document0_.lock_status as lock8_0_0_, document0_.path as path0_0_ from mua_database.document document0_ where document0_.document_id=?
[DEBUG] 2016-05-02 17:37:43,278 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [NONE]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=?
[DEBUG] 2016-05-02 17:37:43,278 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [READ]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=?
[DEBUG] 2016-05-02 17:37:43,279 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [UPGRADE]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=? for update
[DEBUG] 2016-05-02 17:37:43,279 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [UPGRADE_NOWAIT]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=? for update
[DEBUG] 2016-05-02 17:37:43,279 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [FORCE]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=? for update
[DEBUG] 2016-05-02 17:37:43,280 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [PESSIMISTIC_READ]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=? lock in share mode
[DEBUG] 2016-05-02 17:37:43,280 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [PESSIMISTIC_WRITE]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=? for update
[DEBUG] 2016-05-02 17:37:43,281 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [PESSIMISTIC_FORCE_INCREMENT]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=? for update
[DEBUG] 2016-05-02 17:37:43,281 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [OPTIMISTIC]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=?
[DEBUG] 2016-05-02 17:37:43,282 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.DocumentHistory [OPTIMISTIC_FORCE_INCREMENT]: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=?
[DEBUG] 2016-05-02 17:37:43,282 org.hibernate.loader.Loader <init> - Static select for action ACTION_MERGE on entity in.jdsoft.dms.model.DocumentHistory: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=?
[DEBUG] 2016-05-02 17:37:43,283 org.hibernate.loader.Loader <init> - Static select for action ACTION_REFRESH on entity in.jdsoft.dms.model.DocumentHistory: select documenthi0_.document_history_id as document1_2_0_, documenthi0_.author as author2_0_, documenthi0_.content as content2_0_, documenthi0_.date as date2_0_, documenthi0_.document_id as document5_2_0_, documenthi0_.version as version2_0_ from mua_database.document_history documenthi0_ where documenthi0_.document_history_id=?
[DEBUG] 2016-05-02 17:37:43,284 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [NONE]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=?
[DEBUG] 2016-05-02 17:37:43,284 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [READ]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=?
[DEBUG] 2016-05-02 17:37:43,285 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [UPGRADE]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=? for update
[DEBUG] 2016-05-02 17:37:43,285 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [UPGRADE_NOWAIT]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=? for update
[DEBUG] 2016-05-02 17:37:43,286 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [FORCE]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=? for update
[DEBUG] 2016-05-02 17:37:43,286 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [PESSIMISTIC_READ]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=? lock in share mode
[DEBUG] 2016-05-02 17:37:43,287 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [PESSIMISTIC_WRITE]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=? for update
[DEBUG] 2016-05-02 17:37:43,288 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [PESSIMISTIC_FORCE_INCREMENT]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=? for update
[DEBUG] 2016-05-02 17:37:43,288 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [OPTIMISTIC]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=?
[DEBUG] 2016-05-02 17:37:43,289 org.hibernate.loader.Loader <init> - Static select for entity in.jdsoft.dms.model.Folder [OPTIMISTIC_FORCE_INCREMENT]: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=?
[DEBUG] 2016-05-02 17:37:43,289 org.hibernate.loader.Loader <init> - Static select for action ACTION_MERGE on entity in.jdsoft.dms.model.Folder: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=?
[DEBUG] 2016-05-02 17:37:43,290 org.hibernate.loader.Loader <init> - Static select for action ACTION_REFRESH on entity in.jdsoft.dms.model.Folder: select folder0_.folder_id as folder1_3_0_, folder0_.created_by as created2_3_0_, folder0_.created_date as created3_3_0_, folder0_.folder_code as folder4_3_0_, folder0_.folder_name as folder5_3_0_, folder0_.modified_by as modified6_3_0_, folder0_.modified_date as modified7_3_0_, folder0_.parent_folder_id as parent8_3_0_ from mua_database.folder folder0_ where folder0_.folder_id=?
[DEBUG] 2016-05-02 17:37:43,469 org.hibernate.internal.SessionFactoryRegistry <init> - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c5dc4a2
[DEBUG] 2016-05-02 17:37:43,470 org.hibernate.internal.SessionFactoryRegistry addSessionFactory - Registering SessionFactory: d6eaab7b-4258-4bc7-97e4-376dbca4e586 (<unnamed>)
[DEBUG] 2016-05-02 17:37:43,470 org.hibernate.internal.SessionFactoryRegistry addSessionFactory - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2016-05-02 17:37:43,470 org.hibernate.internal.SessionFactoryImpl <init> - Instantiated session factory
[INFO] 2016-05-02 17:37:43,476 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - HHH000228: Running hbm2ddl schema update
[INFO] 2016-05-02 17:37:43,476 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - HHH000102: Fetching database metadata
[INFO] 2016-05-02 17:37:43,480 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - HHH000396: Updating schema
[DEBUG] 2016-05-02 17:37:43,480 org.hibernate.cfg.Configuration processHbmXmlQueue - Processing hbm.xml files
[DEBUG] 2016-05-02 17:37:43,480 org.hibernate.cfg.Configuration processAnnotatedClassesQueue - Process annotated classes
[DEBUG] 2016-05-02 17:37:43,480 org.hibernate.cfg.Configuration processFkSecondPassInOrder - Processing fk mappings (*ToOne and JoinedSubclass)
[DEBUG] 2016-05-02 17:37:43,480 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing extends queue
[DEBUG] 2016-05-02 17:37:43,481 org.hibernate.cfg.Configuration processExtendsQueue - Processing extends queue
[DEBUG] 2016-05-02 17:37:43,481 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing collection mappings
[DEBUG] 2016-05-02 17:37:43,481 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing native query and ResultSetMapping mappings
[DEBUG] 2016-05-02 17:37:43,481 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing association property references
[DEBUG] 2016-05-02 17:37:43,481 org.hibernate.cfg.Configuration originalSecondPassCompile - Processing foreign key constraints
[INFO] 2016-05-02 17:37:43,488 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: document
[DEBUG] 2016-05-02 17:37:43,489 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[INFO] 2016-05-02 17:37:43,493 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: document_history
[DEBUG] 2016-05-02 17:37:43,494 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[INFO] 2016-05-02 17:37:43,498 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: folder
[DEBUG] 2016-05-02 17:37:43,498 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[INFO] 2016-05-02 17:37:43,503 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: users
[DEBUG] 2016-05-02 17:37:43,504 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[INFO] 2016-05-02 17:37:43,508 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: users_access
[DEBUG] 2016-05-02 17:37:43,508 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[INFO] 2016-05-02 17:37:43,512 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: users_role
[DEBUG] 2016-05-02 17:37:43,513 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[INFO] 2016-05-02 17:37:43,518 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: document
[INFO] 2016-05-02 17:37:43,522 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: document_history
[INFO] 2016-05-02 17:37:43,527 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: folder
[INFO] 2016-05-02 17:37:43,531 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: users
[INFO] 2016-05-02 17:37:43,538 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: users_access
[INFO] 2016-05-02 17:37:43,543 java.sql.DatabaseMetaData getTableMetadata - HHH000262: Table not found: users_role
[DEBUG] 2016-05-02 17:37:43,543 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:43,544 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:43,544 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:43,545 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:43,545 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:43,545 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory setDialect - Setting dialect [org.hibernate.dialect.MySQL5Dialect]
[DEBUG] 2016-05-02 17:37:43,545 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - create table mua_database.document (document_id integer not null auto_increment unique, document_access varchar(255), document_name varchar(255) not null, document_uuid varchar(255) not null unique, edit_information varchar(255), edit_status integer not null, lock_information varchar(255), lock_status integer not null, path varchar(255), primary key (document_id), unique (document_name, path), unique (document_uuid))
[DEBUG] 2016-05-02 17:37:45,522 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - create table mua_database.document_history (document_history_id integer not null auto_increment unique, author varchar(255) not null, content LONGBLOB, date datetime, document_id integer not null, version double precision, primary key (document_history_id))
[DEBUG] 2016-05-02 17:37:46,333 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - create table mua_database.folder (folder_id integer not null auto_increment unique, created_by varchar(255) not null, created_date datetime, folder_code varchar(255) not null unique, folder_name varchar(255) not null, modified_by varchar(255) not null, modified_date datetime, parent_folder_id integer, primary key (folder_id), unique (folder_code), unique (folder_name, parent_folder_id))
[DEBUG] 2016-05-02 17:37:46,888 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - create table mua_database.users (user_id integer not null auto_increment unique, folder_code varchar(255), user_email varchar(255), user_name varchar(255) not null unique, user_password varchar(255) not null, user_role varchar(255) not null, user_status integer not null, primary key (user_id), unique (user_name))
[DEBUG] 2016-05-02 17:37:47,621 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - create table mua_database.users_access (users_access_id integer not null auto_increment unique, user_control varchar(255), user_role_id integer unique, primary key (users_access_id), unique (user_role_id))
[DEBUG] 2016-05-02 17:37:48,500 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - create table mua_database.users_role (user_role_id integer not null auto_increment unique, role_name varchar(255) not null unique, primary key (user_role_id), unique (role_name))
[INFO] 2016-05-02 17:37:49,243 org.hibernate.tool.hbm2ddl.SchemaUpdate execute - HHH000232: Schema update complete
[DEBUG] 2016-05-02 17:37:49,246 org.hibernate.internal.SessionFactoryImpl checkNamedQueries - Checking 0 named HQL queries
[DEBUG] 2016-05-02 17:37:49,246 org.hibernate.internal.SessionFactoryImpl checkNamedQueries - Checking 0 named SQL queries
[DEBUG] 2016-05-02 17:37:49,262 org.hibernate.stat.internal.StatisticsInitiator initiateServiceInternal - Statistics initialized [enabled=false]
[DEBUG] 2016-05-02 17:37:49,264 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,266 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,267 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,276 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor registerDependentBeans - Autowiring by type from bean name 'folderDAO' to bean named 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,276 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,278 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,289 org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator buildAdvisors - Creating implicit proxy for bean 'folderDAO' with 0 common interceptors and 1 specific interceptors
[DEBUG] 2016-05-02 17:37:49,297 org.springframework.aop.framework.CglibAopProxy getProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [in.jdsoft.dms.dao.FolderDAO@302a07d]
[DEBUG] 2016-05-02 17:37:49,364 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[DEBUG] 2016-05-02 17:37:49,368 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.FolderDAO.update(in.jdsoft.dms.model.Folder)
[DEBUG] 2016-05-02 17:37:49,368 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,369 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.FolderDAO.delete(in.jdsoft.dms.model.Folder)
[DEBUG] 2016-05-02 17:37:49,370 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Folder in.jdsoft.dms.dao.FolderDAO.merge(in.jdsoft.dms.model.Folder)
[DEBUG] 2016-05-02 17:37:49,370 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.persist' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,370 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.FolderDAO.persist(in.jdsoft.dms.model.Folder)
[DEBUG] 2016-05-02 17:37:49,371 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.getFolderCode' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,371 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.FolderDAO.getFolderCode(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,371 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.getFolderDetailsByFolderName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,371 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Folder in.jdsoft.dms.dao.FolderDAO.getFolderDetailsByFolderName(java.lang.String,java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,371 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.getFolderCodeByUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,371 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Folder in.jdsoft.dms.dao.FolderDAO.getFolderCodeByUser(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,372 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.getFolderDetailsByUserName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,372 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Folder in.jdsoft.dms.dao.FolderDAO.getFolderDetailsByUserName(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,372 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.getFolderList' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,372 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.FolderDAO.getFolderList()
[DEBUG] 2016-05-02 17:37:49,372 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.getFoldersListByUsers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,372 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.FolderDAO.getFoldersListByUsers(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,373 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.FolderId' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,373 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Folder in.jdsoft.dms.dao.FolderDAO.FolderId(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,373 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'FolderDAO.findById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,373 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Folder in.jdsoft.dms.dao.FolderDAO.findById(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,373 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.FolderDAO.attachDirty(in.jdsoft.dms.model.Folder)
[DEBUG] 2016-05-02 17:37:49,373 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.FolderDAO.attachClean(in.jdsoft.dms.model.Folder)
[DEBUG] 2016-05-02 17:37:49,374 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.FolderDAO.findByExample(in.jdsoft.dms.model.Folder)
[DEBUG] 2016-05-02 17:37:49,374 org.springframework.aop.framework.CglibAopProxy accept - Found finalize() method - using NO_OVERRIDE
[DEBUG] 2016-05-02 17:37:49,374 org.springframework.aop.framework.CglibAopProxy accept - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[DEBUG] 2016-05-02 17:37:49,374 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[DEBUG] 2016-05-02 17:37:49,374 org.springframework.aop.framework.CglibAopProxy accept - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[DEBUG] 2016-05-02 17:37:49,374 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,375 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[DEBUG] 2016-05-02 17:37:49,376 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[DEBUG] 2016-05-02 17:37:49,377 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[DEBUG] 2016-05-02 17:37:49,377 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,377 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,377 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[DEBUG] 2016-05-02 17:37:49,377 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[DEBUG] 2016-05-02 17:37:49,377 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,377 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[DEBUG] 2016-05-02 17:37:49,403 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'folderDAO'
[DEBUG] 2016-05-02 17:37:49,403 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'documentDAO'
[DEBUG] 2016-05-02 17:37:49,404 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'documentDAO'
[DEBUG] 2016-05-02 17:37:49,405 org.springframework.beans.factory.annotation.InjectionMetadata checkConfigMembers - Registered injected element on class [in.jdsoft.dms.dao.DocumentDAO]: AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.DocumentDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,406 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'documentDAO' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:49,408 org.springframework.beans.factory.annotation.InjectionMetadata inject - Processing injected element of bean 'documentDAO': AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.DocumentDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,408 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,409 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor registerDependentBeans - Autowiring by type from bean name 'documentDAO' to bean named 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,409 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,409 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,409 org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator buildAdvisors - Creating implicit proxy for bean 'documentDAO' with 0 common interceptors and 1 specific interceptors
[DEBUG] 2016-05-02 17:37:49,410 org.springframework.aop.framework.CglibAopProxy getProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [in.jdsoft.dms.dao.DocumentDAO@a202ccb]
[DEBUG] 2016-05-02 17:37:49,411 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentDAO.update(in.jdsoft.dms.model.Document)
[DEBUG] 2016-05-02 17:37:49,411 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,411 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentDAO.delete(in.jdsoft.dms.model.Document)
[DEBUG] 2016-05-02 17:37:49,411 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.persist' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,412 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentDAO.persist(in.jdsoft.dms.model.Document)
[DEBUG] 2016-05-02 17:37:49,412 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.getPathByDocument' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,412 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.DocumentDAO.getPathByDocument(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,412 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.getUuidByDocument' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,412 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Document in.jdsoft.dms.dao.DocumentDAO.getUuidByDocument(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,413 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.getDocumentList' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,413 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.DocumentDAO.getDocumentList()
[DEBUG] 2016-05-02 17:37:49,413 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.getDocumentListByUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,413 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.DocumentDAO.getDocumentListByUser(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,413 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Document in.jdsoft.dms.dao.DocumentDAO.findById(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,414 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentDAO.getDocumentsByUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,414 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.DocumentDAO.getDocumentsByUser(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,414 org.springframework.aop.framework.CglibAopProxy accept - Found finalize() method - using NO_OVERRIDE
[DEBUG] 2016-05-02 17:37:49,414 org.springframework.aop.framework.CglibAopProxy accept - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[DEBUG] 2016-05-02 17:37:49,414 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[DEBUG] 2016-05-02 17:37:49,415 org.springframework.aop.framework.CglibAopProxy accept - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[DEBUG] 2016-05-02 17:37:49,415 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[DEBUG] 2016-05-02 17:37:49,415 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,415 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,415 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[DEBUG] 2016-05-02 17:37:49,415 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[DEBUG] 2016-05-02 17:37:49,415 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[DEBUG] 2016-05-02 17:37:49,416 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[DEBUG] 2016-05-02 17:37:49,417 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[DEBUG] 2016-05-02 17:37:49,417 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[DEBUG] 2016-05-02 17:37:49,417 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[DEBUG] 2016-05-02 17:37:49,417 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[DEBUG] 2016-05-02 17:37:49,417 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,417 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,417 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[DEBUG] 2016-05-02 17:37:49,418 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[DEBUG] 2016-05-02 17:37:49,418 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,418 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[DEBUG] 2016-05-02 17:37:49,430 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'documentDAO'
[DEBUG] 2016-05-02 17:37:49,431 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'usersRoleDAO'
[DEBUG] 2016-05-02 17:37:49,431 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'usersRoleDAO'
[DEBUG] 2016-05-02 17:37:49,432 org.springframework.beans.factory.annotation.InjectionMetadata checkConfigMembers - Registered injected element on class [in.jdsoft.dms.dao.UsersRoleDAO]: AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.UsersRoleDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,432 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'usersRoleDAO' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:49,434 org.springframework.beans.factory.annotation.InjectionMetadata inject - Processing injected element of bean 'usersRoleDAO': AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.UsersRoleDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,434 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,434 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor registerDependentBeans - Autowiring by type from bean name 'usersRoleDAO' to bean named 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,434 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,435 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersRoleDAO.persist' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,435 org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator buildAdvisors - Creating implicit proxy for bean 'usersRoleDAO' with 0 common interceptors and 1 specific interceptors
[DEBUG] 2016-05-02 17:37:49,435 org.springframework.aop.framework.CglibAopProxy getProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [in.jdsoft.dms.dao.UsersRoleDAO@18025ced]
[DEBUG] 2016-05-02 17:37:49,439 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersRoleDAO.delete(in.jdsoft.dms.model.UsersRole)
[DEBUG] 2016-05-02 17:37:49,439 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.UsersRole in.jdsoft.dms.dao.UsersRoleDAO.merge(in.jdsoft.dms.model.UsersRole)
[DEBUG] 2016-05-02 17:37:49,439 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersRoleDAO.persist(in.jdsoft.dms.model.UsersRole)
[DEBUG] 2016-05-02 17:37:49,439 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.UsersRole in.jdsoft.dms.dao.UsersRoleDAO.findById(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,440 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersRoleDAO.attachDirty(in.jdsoft.dms.model.UsersRole)
[DEBUG] 2016-05-02 17:37:49,440 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersRoleDAO.attachClean(in.jdsoft.dms.model.UsersRole)
[DEBUG] 2016-05-02 17:37:49,440 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.UsersRoleDAO.findByExample(in.jdsoft.dms.model.UsersRole)
[DEBUG] 2016-05-02 17:37:49,440 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersRoleDAO.getUsersRoleList' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,440 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.UsersRoleDAO.getUsersRoleList()
[DEBUG] 2016-05-02 17:37:49,441 org.springframework.aop.framework.CglibAopProxy accept - Found finalize() method - using NO_OVERRIDE
[DEBUG] 2016-05-02 17:37:49,441 org.springframework.aop.framework.CglibAopProxy accept - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[DEBUG] 2016-05-02 17:37:49,441 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[DEBUG] 2016-05-02 17:37:49,441 org.springframework.aop.framework.CglibAopProxy accept - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[DEBUG] 2016-05-02 17:37:49,441 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[DEBUG] 2016-05-02 17:37:49,441 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,441 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,442 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[DEBUG] 2016-05-02 17:37:49,442 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[DEBUG] 2016-05-02 17:37:49,442 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,442 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,442 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,442 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[DEBUG] 2016-05-02 17:37:49,442 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[DEBUG] 2016-05-02 17:37:49,443 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[DEBUG] 2016-05-02 17:37:49,444 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,444 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,444 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[DEBUG] 2016-05-02 17:37:49,444 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[DEBUG] 2016-05-02 17:37:49,444 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,444 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[DEBUG] 2016-05-02 17:37:49,463 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'usersRoleDAO'
[DEBUG] 2016-05-02 17:37:49,463 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'usersAccessDAO'
[DEBUG] 2016-05-02 17:37:49,463 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'usersAccessDAO'
[DEBUG] 2016-05-02 17:37:49,465 org.springframework.beans.factory.annotation.InjectionMetadata checkConfigMembers - Registered injected element on class [in.jdsoft.dms.dao.UsersAccessDAO]: AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.UsersAccessDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,465 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'usersAccessDAO' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:49,467 org.springframework.beans.factory.annotation.InjectionMetadata inject - Processing injected element of bean 'usersAccessDAO': AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.UsersAccessDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,468 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,468 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor registerDependentBeans - Autowiring by type from bean name 'usersAccessDAO' to bean named 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,468 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,469 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersAccessDAO.persist' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,469 org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator buildAdvisors - Creating implicit proxy for bean 'usersAccessDAO' with 0 common interceptors and 1 specific interceptors
[DEBUG] 2016-05-02 17:37:49,470 org.springframework.aop.framework.CglibAopProxy getProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [in.jdsoft.dms.dao.UsersAccessDAO@5d2a4eed]
[DEBUG] 2016-05-02 17:37:49,473 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersAccessDAO.delete(in.jdsoft.dms.model.UsersAccess)
[DEBUG] 2016-05-02 17:37:49,473 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.UsersAccess in.jdsoft.dms.dao.UsersAccessDAO.merge(in.jdsoft.dms.model.UsersAccess)
[DEBUG] 2016-05-02 17:37:49,473 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersAccessDAO.persist(in.jdsoft.dms.model.UsersAccess)
[DEBUG] 2016-05-02 17:37:49,474 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.UsersAccess in.jdsoft.dms.dao.UsersAccessDAO.findById(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,474 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersAccessDAO.attachDirty(in.jdsoft.dms.model.UsersAccess)
[DEBUG] 2016-05-02 17:37:49,474 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersAccessDAO.attachClean(in.jdsoft.dms.model.UsersAccess)
[DEBUG] 2016-05-02 17:37:49,474 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.UsersAccessDAO.findByExample(in.jdsoft.dms.model.UsersAccess)
[DEBUG] 2016-05-02 17:37:49,475 org.springframework.aop.framework.CglibAopProxy accept - Found finalize() method - using NO_OVERRIDE
[DEBUG] 2016-05-02 17:37:49,475 org.springframework.aop.framework.CglibAopProxy accept - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[DEBUG] 2016-05-02 17:37:49,475 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[DEBUG] 2016-05-02 17:37:49,475 org.springframework.aop.framework.CglibAopProxy accept - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[DEBUG] 2016-05-02 17:37:49,475 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[DEBUG] 2016-05-02 17:37:49,476 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,476 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,476 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[DEBUG] 2016-05-02 17:37:49,476 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[DEBUG] 2016-05-02 17:37:49,476 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,477 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,477 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,477 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[DEBUG] 2016-05-02 17:37:49,477 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[DEBUG] 2016-05-02 17:37:49,477 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,478 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,478 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[DEBUG] 2016-05-02 17:37:49,478 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[DEBUG] 2016-05-02 17:37:49,478 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[DEBUG] 2016-05-02 17:37:49,478 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[DEBUG] 2016-05-02 17:37:49,479 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[DEBUG] 2016-05-02 17:37:49,479 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[DEBUG] 2016-05-02 17:37:49,479 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,479 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,479 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[DEBUG] 2016-05-02 17:37:49,480 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[DEBUG] 2016-05-02 17:37:49,480 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,480 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[DEBUG] 2016-05-02 17:37:49,494 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'usersAccessDAO'
[DEBUG] 2016-05-02 17:37:49,494 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'usersDAO'
[DEBUG] 2016-05-02 17:37:49,494 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'usersDAO'
[DEBUG] 2016-05-02 17:37:49,496 org.springframework.beans.factory.annotation.InjectionMetadata checkConfigMembers - Registered injected element on class [in.jdsoft.dms.dao.UsersDAO]: AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.UsersDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,497 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'usersDAO' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:49,500 org.springframework.beans.factory.annotation.InjectionMetadata inject - Processing injected element of bean 'usersDAO': AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.UsersDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,501 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,501 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor registerDependentBeans - Autowiring by type from bean name 'usersDAO' to bean named 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,501 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,502 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersDAO.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,502 org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator buildAdvisors - Creating implicit proxy for bean 'usersDAO' with 0 common interceptors and 1 specific interceptors
[DEBUG] 2016-05-02 17:37:49,502 org.springframework.aop.framework.CglibAopProxy getProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [in.jdsoft.dms.dao.UsersDAO@77a98a6a]
[DEBUG] 2016-05-02 17:37:49,504 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersDAO.update(in.jdsoft.dms.model.Users)
[DEBUG] 2016-05-02 17:37:49,504 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersDAO.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,504 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersDAO.delete(in.jdsoft.dms.model.Users)
[DEBUG] 2016-05-02 17:37:49,505 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Users in.jdsoft.dms.dao.UsersDAO.merge(in.jdsoft.dms.model.Users)
[DEBUG] 2016-05-02 17:37:49,505 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersDAO.persist' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,505 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersDAO.persist(in.jdsoft.dms.model.Users)
[DEBUG] 2016-05-02 17:37:49,506 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersDAO.getUserByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,506 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Users in.jdsoft.dms.dao.UsersDAO.getUserByName(java.lang.String)
[DEBUG] 2016-05-02 17:37:49,506 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersDAO.getUserById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,506 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Users in.jdsoft.dms.dao.UsersDAO.getUserById(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,507 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersDAO.getUsersList' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,507 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.UsersDAO.getUsersList()
[DEBUG] 2016-05-02 17:37:49,507 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.Users in.jdsoft.dms.dao.UsersDAO.findById(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,508 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'UsersDAO.getUsers' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,508 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.UsersDAO.getUsers()
[DEBUG] 2016-05-02 17:37:49,508 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersDAO.attachDirty(in.jdsoft.dms.model.Users)
[DEBUG] 2016-05-02 17:37:49,508 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.UsersDAO.attachClean(in.jdsoft.dms.model.Users)
[DEBUG] 2016-05-02 17:37:49,509 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.UsersDAO.findByExample(in.jdsoft.dms.model.Users)
[DEBUG] 2016-05-02 17:37:49,509 org.springframework.aop.framework.CglibAopProxy accept - Found finalize() method - using NO_OVERRIDE
[DEBUG] 2016-05-02 17:37:49,509 org.springframework.aop.framework.CglibAopProxy accept - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[DEBUG] 2016-05-02 17:37:49,509 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[DEBUG] 2016-05-02 17:37:49,509 org.springframework.aop.framework.CglibAopProxy accept - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[DEBUG] 2016-05-02 17:37:49,510 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[DEBUG] 2016-05-02 17:37:49,510 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,510 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,510 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[DEBUG] 2016-05-02 17:37:49,510 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[DEBUG] 2016-05-02 17:37:49,511 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,511 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,511 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,511 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[DEBUG] 2016-05-02 17:37:49,511 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[DEBUG] 2016-05-02 17:37:49,512 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,512 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,512 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[DEBUG] 2016-05-02 17:37:49,512 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[DEBUG] 2016-05-02 17:37:49,512 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[DEBUG] 2016-05-02 17:37:49,513 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[DEBUG] 2016-05-02 17:37:49,513 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[DEBUG] 2016-05-02 17:37:49,513 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[DEBUG] 2016-05-02 17:37:49,513 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,513 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,514 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[DEBUG] 2016-05-02 17:37:49,514 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[DEBUG] 2016-05-02 17:37:49,514 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,514 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[DEBUG] 2016-05-02 17:37:49,528 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'usersDAO'
[DEBUG] 2016-05-02 17:37:49,528 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'documentHistoryDAO'
[DEBUG] 2016-05-02 17:37:49,528 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'documentHistoryDAO'
[DEBUG] 2016-05-02 17:37:49,530 org.springframework.beans.factory.annotation.InjectionMetadata checkConfigMembers - Registered injected element on class [in.jdsoft.dms.dao.DocumentHistoryDAO]: AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.DocumentHistoryDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,530 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'documentHistoryDAO' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:49,533 org.springframework.beans.factory.annotation.InjectionMetadata inject - Processing injected element of bean 'documentHistoryDAO': AutowiredFieldElement for private org.hibernate.SessionFactory in.jdsoft.dms.dao.DocumentHistoryDAO.sessionFactory
[DEBUG] 2016-05-02 17:37:49,533 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,533 org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor registerDependentBeans - Autowiring by type from bean name 'documentHistoryDAO' to bean named 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,534 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,534 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentHistoryDAO.update' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,534 org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator buildAdvisors - Creating implicit proxy for bean 'documentHistoryDAO' with 0 common interceptors and 1 specific interceptors
[DEBUG] 2016-05-02 17:37:49,535 org.springframework.aop.framework.CglibAopProxy getProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [in.jdsoft.dms.dao.DocumentHistoryDAO@7e22550a]
[DEBUG] 2016-05-02 17:37:49,536 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentHistoryDAO.update(in.jdsoft.dms.model.DocumentHistory)
[DEBUG] 2016-05-02 17:37:49,536 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentHistoryDAO.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,537 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentHistoryDAO.delete(in.jdsoft.dms.model.DocumentHistory)
[DEBUG] 2016-05-02 17:37:49,537 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.DocumentHistory in.jdsoft.dms.dao.DocumentHistoryDAO.merge(in.jdsoft.dms.model.DocumentHistory)
[DEBUG] 2016-05-02 17:37:49,537 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentHistoryDAO.persist' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,538 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentHistoryDAO.persist(in.jdsoft.dms.model.DocumentHistory)
[DEBUG] 2016-05-02 17:37:49,538 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentHistoryDAO.getNameByDocumentHistory' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,538 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.DocumentHistory in.jdsoft.dms.dao.DocumentHistoryDAO.getNameByDocumentHistory(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,538 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource getTransactionAttribute - Adding transactional method 'DocumentHistoryDAO.getIdByDocumentHistory' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,539 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.DocumentHistoryDAO.getIdByDocumentHistory(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,539 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public in.jdsoft.dms.model.DocumentHistory in.jdsoft.dms.dao.DocumentHistoryDAO.findById(java.lang.Integer)
[DEBUG] 2016-05-02 17:37:49,539 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentHistoryDAO.attachDirty(in.jdsoft.dms.model.DocumentHistory)
[DEBUG] 2016-05-02 17:37:49,539 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public void in.jdsoft.dms.dao.DocumentHistoryDAO.attachClean(in.jdsoft.dms.model.DocumentHistory)
[DEBUG] 2016-05-02 17:37:49,539 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.util.List in.jdsoft.dms.dao.DocumentHistoryDAO.findByExample(in.jdsoft.dms.model.DocumentHistory)
[DEBUG] 2016-05-02 17:37:49,540 org.springframework.aop.framework.CglibAopProxy accept - Found finalize() method - using NO_OVERRIDE
[DEBUG] 2016-05-02 17:37:49,540 org.springframework.aop.framework.CglibAopProxy accept - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[DEBUG] 2016-05-02 17:37:49,540 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[DEBUG] 2016-05-02 17:37:49,540 org.springframework.aop.framework.CglibAopProxy accept - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[DEBUG] 2016-05-02 17:37:49,540 org.springframework.aop.framework.CglibAopProxy accept - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[DEBUG] 2016-05-02 17:37:49,541 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,541 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,541 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[DEBUG] 2016-05-02 17:37:49,541 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[DEBUG] 2016-05-02 17:37:49,541 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,542 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,542 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[DEBUG] 2016-05-02 17:37:49,542 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[DEBUG] 2016-05-02 17:37:49,542 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[DEBUG] 2016-05-02 17:37:49,542 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,542 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,543 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[DEBUG] 2016-05-02 17:37:49,543 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[DEBUG] 2016-05-02 17:37:49,543 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[DEBUG] 2016-05-02 17:37:49,543 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[DEBUG] 2016-05-02 17:37:49,543 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[DEBUG] 2016-05-02 17:37:49,544 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[DEBUG] 2016-05-02 17:37:49,544 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,544 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[DEBUG] 2016-05-02 17:37:49,544 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[DEBUG] 2016-05-02 17:37:49,544 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[DEBUG] 2016-05-02 17:37:49,545 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[DEBUG] 2016-05-02 17:37:49,545 org.springframework.aop.framework.CglibAopProxy accept - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[DEBUG] 2016-05-02 17:37:49,557 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'documentHistoryDAO'
[DEBUG] 2016-05-02 17:37:49,557 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'ds'
[DEBUG] 2016-05-02 17:37:49,558 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'dataSource'
[DEBUG] 2016-05-02 17:37:49,558 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,559 org.springframework.beans.factory.support.DefaultListableBeanFactory getSingleton - Creating shared instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:49,559 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Creating instance of bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:49,571 org.springframework.beans.factory.support.DefaultListableBeanFactory doCreateBean - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[DEBUG] 2016-05-02 17:37:49,578 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'sessionFactory'
[DEBUG] 2016-05-02 17:37:49,579 org.springframework.beans.factory.support.DefaultListableBeanFactory invokeInitMethods - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[INFO] 2016-05-02 17:37:49,591 org.springframework.orm.hibernate4.HibernateTransactionManager afterPropertiesSet - Using DataSource [org.apache.commons.dbcp.BasicDataSource@73302995] of Hibernate SessionFactory for HibernateTransactionManager
[DEBUG] 2016-05-02 17:37:49,593 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[DEBUG] 2016-05-02 17:37:49,594 org.springframework.beans.factory.support.DefaultListableBeanFactory createBean - Finished creating instance of bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:49,594 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
[DEBUG] 2016-05-02 17:37:49,597 org.springframework.context.support.ClassPathXmlApplicationContext initLifecycleProcessor - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@57eda880]
[DEBUG] 2016-05-02 17:37:49,597 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'lifecycleProcessor'
[DEBUG] 2016-05-02 17:37:49,600 org.springframework.core.env.PropertySourcesPropertyResolver getProperty - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
[DEBUG] 2016-05-02 17:37:49,601 org.springframework.core.env.PropertySourcesPropertyResolver getProperty - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
[DEBUG] 2016-05-02 17:37:49,601 org.springframework.core.env.PropertySourcesPropertyResolver getProperty - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
[DEBUG] 2016-05-02 17:37:49,601 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'folderDAO'
[DEBUG] 2016-05-02 17:37:49,601 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'usersDAO'
[DEBUG] 2016-05-02 17:37:49,602 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'usersAccessDAO'
[DEBUG] 2016-05-02 17:37:49,602 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'usersRoleDAO'
[DEBUG] 2016-05-02 17:37:49,602 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'documentDAO'
[DEBUG] 2016-05-02 17:37:49,602 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'documentHistoryDAO'
[DEBUG] 2016-05-02 17:37:49,605 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:49,612 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.UsersDAO.getUsers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,663 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:49,665 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:49,683 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:49,683 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:49,684 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:49,684 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:49,684 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:49,688 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@50fe837a[valid=true]]
[DEBUG] 2016-05-02 17:37:49,716 in.jdsoft.dms.dao.UsersDAO getUsers - getting User
[DEBUG] 2016-05-02 17:37:49,834 org.hibernate.SQL logStatement - select this_.user_id as user1_5_0_, this_.folder_code as folder2_5_0_, this_.user_email as user3_5_0_, this_.user_name as user4_5_0_, this_.user_password as user5_5_0_, this_.user_role as user6_5_0_, this_.user_status as user7_5_0_ from mua_database.users this_
[DEBUG] 2016-05-02 17:37:49,908 in.jdsoft.dms.dao.UsersDAO getUsers - get successful, instance found
[DEBUG] 2016-05-02 17:37:49,909 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:49,909 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:49,910 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:49,911 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:49,911 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:49,913 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:49,914 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:49,914 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:49,914 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:49,914 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:49,914 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:49,914 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:49,916 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:49,916 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.UsersDAO.persist]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:49,916 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:49,917 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:49,917 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:49,917 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:49,917 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:49,917 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:49,917 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:49,918 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@70dd7e15[valid=true]]
[DEBUG] 2016-05-02 17:37:49,918 in.jdsoft.dms.dao.UsersDAO persist - persisting Users instance
[DEBUG] 2016-05-02 17:37:49,932 org.hibernate.engine.spi.ActionQueue addResolvedEntityInsertAction - Executing identity-insert immediately
[DEBUG] 2016-05-02 17:37:49,935 org.hibernate.SQL logStatement - insert into mua_database.users (folder_code, user_email, user_name, user_password, user_role, user_status) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:50,040 org.hibernate.id.IdentifierGeneratorHelper getGeneratedIdentity - Natively generated identity: 1
[DEBUG] 2016-05-02 17:37:50,045 in.jdsoft.dms.dao.UsersDAO persist - persist successful
[DEBUG] 2016-05-02 17:37:50,045 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:50,046 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.Users#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,047 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:50,048 org.hibernate.event.internal.AbstractFlushingEventListener prepareEntityFlushes - Processing flush-time cascades
[DEBUG] 2016-05-02 17:37:50,049 org.hibernate.event.internal.AbstractFlushingEventListener prepareCollectionFlushes - Dirty checking collections
[DEBUG] 2016-05-02 17:37:50,052 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2016-05-02 17:37:50,053 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2016-05-02 17:37:50,054 org.hibernate.internal.util.EntityPrinter toString - Listing entities:
[DEBUG] 2016-05-02 17:37:50,055 org.hibernate.internal.util.EntityPrinter toString - in.jdsoft.dms.model.Users{userPassword=admin, userStatus=1, folderCode=123456, userEmail=jdsoftAdmin@gmail.com, userName=jdsoftAdmin, userRole=Admin, userId=1}
[DEBUG] 2016-05-02 17:37:50,155 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:50,155 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:50,157 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.Users#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:50,157 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:50,157 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:50,157 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,157 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,158 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,158 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,158 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:50,159 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.FolderDAO.persist]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:50,159 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:50,159 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,159 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:50,159 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:50,159 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:50,160 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:50,160 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:50,162 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@5c48c0c0[valid=true]]
[DEBUG] 2016-05-02 17:37:50,207 in.jdsoft.dms.dao.FolderDAO persist - persisting Folder instance
[DEBUG] 2016-05-02 17:37:50,207 org.hibernate.engine.spi.ActionQueue addResolvedEntityInsertAction - Executing identity-insert immediately
[DEBUG] 2016-05-02 17:37:50,209 org.hibernate.SQL logStatement - insert into mua_database.folder (created_by, created_date, folder_code, folder_name, modified_by, modified_date, parent_folder_id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2016-05-02 17:37:50,294 org.hibernate.id.IdentifierGeneratorHelper getGeneratedIdentity - Natively generated identity: 1
[DEBUG] 2016-05-02 17:37:50,295 in.jdsoft.dms.dao.FolderDAO persist - persist successful
[DEBUG] 2016-05-02 17:37:50,295 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:50,295 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.Folder#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,295 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:50,296 org.hibernate.event.internal.AbstractFlushingEventListener prepareEntityFlushes - Processing flush-time cascades
[DEBUG] 2016-05-02 17:37:50,296 org.hibernate.event.internal.AbstractFlushingEventListener prepareCollectionFlushes - Dirty checking collections
[DEBUG] 2016-05-02 17:37:50,296 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2016-05-02 17:37:50,296 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2016-05-02 17:37:50,296 org.hibernate.internal.util.EntityPrinter toString - Listing entities:
[DEBUG] 2016-05-02 17:37:50,297 org.hibernate.internal.util.EntityPrinter toString - in.jdsoft.dms.model.Folder{createdDate=2016-05-02 17:37:50.158, createdBy=jdsoftAdmin, parentFolderId=0, folderCode=123456, modifiedDate=2016-05-02 17:37:50.158, modifiedBy=jdsoftAdmin, folderName=jdsoftAdmin, folderId=1}
[DEBUG] 2016-05-02 17:37:50,345 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:50,345 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:50,346 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.Folder#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:50,347 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:50,347 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:50,347 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,347 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,347 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,347 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,347 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:50,348 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.UsersRoleDAO.persist]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:50,348 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:50,348 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,348 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:50,348 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:50,348 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:50,348 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:50,348 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:50,349 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@31024624[valid=true]]
[DEBUG] 2016-05-02 17:37:50,364 in.jdsoft.dms.dao.UsersRoleDAO persist - persisting UsersRole instance
[DEBUG] 2016-05-02 17:37:50,365 org.hibernate.engine.spi.ActionQueue addResolvedEntityInsertAction - Executing identity-insert immediately
[DEBUG] 2016-05-02 17:37:50,366 org.hibernate.SQL logStatement - insert into mua_database.users_role (role_name) values (?)
[DEBUG] 2016-05-02 17:37:50,498 org.hibernate.id.IdentifierGeneratorHelper getGeneratedIdentity - Natively generated identity: 1
[DEBUG] 2016-05-02 17:37:50,499 in.jdsoft.dms.dao.UsersRoleDAO persist - persist successful
[DEBUG] 2016-05-02 17:37:50,499 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:50,499 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersRole#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,499 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:50,500 org.hibernate.event.internal.AbstractFlushingEventListener prepareEntityFlushes - Processing flush-time cascades
[DEBUG] 2016-05-02 17:37:50,500 org.hibernate.event.internal.AbstractFlushingEventListener prepareCollectionFlushes - Dirty checking collections
[DEBUG] 2016-05-02 17:37:50,500 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2016-05-02 17:37:50,500 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2016-05-02 17:37:50,500 org.hibernate.internal.util.EntityPrinter toString - Listing entities:
[DEBUG] 2016-05-02 17:37:50,500 org.hibernate.internal.util.EntityPrinter toString - in.jdsoft.dms.model.UsersRole{roleName=Admin, userRoleId=1}
[DEBUG] 2016-05-02 17:37:50,566 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:50,567 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:50,570 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersRole#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:50,570 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:50,570 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:50,570 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,570 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,571 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,571 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,571 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:50,571 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.UsersRoleDAO.persist]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:50,571 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:50,572 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,572 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:50,572 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:50,572 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:50,572 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:50,572 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:50,573 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@4b6579e8[valid=true]]
[DEBUG] 2016-05-02 17:37:50,573 in.jdsoft.dms.dao.UsersRoleDAO persist - persisting UsersRole instance
[DEBUG] 2016-05-02 17:37:50,573 org.hibernate.engine.spi.ActionQueue addResolvedEntityInsertAction - Executing identity-insert immediately
[DEBUG] 2016-05-02 17:37:50,574 org.hibernate.SQL logStatement - insert into mua_database.users_role (role_name) values (?)
[DEBUG] 2016-05-02 17:37:50,595 org.hibernate.id.IdentifierGeneratorHelper getGeneratedIdentity - Natively generated identity: 2
[DEBUG] 2016-05-02 17:37:50,596 in.jdsoft.dms.dao.UsersRoleDAO persist - persist successful
[DEBUG] 2016-05-02 17:37:50,596 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:50,596 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersRole#2]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,596 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:50,597 org.hibernate.event.internal.AbstractFlushingEventListener prepareEntityFlushes - Processing flush-time cascades
[DEBUG] 2016-05-02 17:37:50,597 org.hibernate.event.internal.AbstractFlushingEventListener prepareCollectionFlushes - Dirty checking collections
[DEBUG] 2016-05-02 17:37:50,597 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2016-05-02 17:37:50,597 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2016-05-02 17:37:50,597 org.hibernate.internal.util.EntityPrinter toString - Listing entities:
[DEBUG] 2016-05-02 17:37:50,598 org.hibernate.internal.util.EntityPrinter toString - in.jdsoft.dms.model.UsersRole{roleName=User, userRoleId=2}
[DEBUG] 2016-05-02 17:37:50,722 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:50,722 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:50,723 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersRole#2]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:50,723 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:50,723 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:50,723 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,724 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,724 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,724 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:50,724 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:50,724 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.UsersAccessDAO.persist]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:50,724 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:50,725 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,725 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:50,725 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:50,725 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:50,725 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:50,725 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:50,726 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@72ccd81a[valid=true]]
[DEBUG] 2016-05-02 17:37:50,770 in.jdsoft.dms.dao.UsersAccessDAO persist - persisting UsersAccess instance
[DEBUG] 2016-05-02 17:37:50,772 org.hibernate.engine.spi.ActionQueue addResolvedEntityInsertAction - Executing identity-insert immediately
[DEBUG] 2016-05-02 17:37:50,772 org.hibernate.SQL logStatement - insert into mua_database.users_access (user_control, user_role_id) values (?, ?)
[DEBUG] 2016-05-02 17:37:50,958 org.hibernate.id.IdentifierGeneratorHelper getGeneratedIdentity - Natively generated identity: 1
[DEBUG] 2016-05-02 17:37:50,959 in.jdsoft.dms.dao.UsersAccessDAO persist - persist successful
[DEBUG] 2016-05-02 17:37:50,959 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:50,959 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersAccess#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:50,959 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:50,959 org.hibernate.event.internal.AbstractFlushingEventListener prepareEntityFlushes - Processing flush-time cascades
[DEBUG] 2016-05-02 17:37:50,960 org.hibernate.event.internal.AbstractFlushingEventListener prepareCollectionFlushes - Dirty checking collections
[DEBUG] 2016-05-02 17:37:50,960 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2016-05-02 17:37:50,960 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2016-05-02 17:37:50,960 org.hibernate.internal.util.EntityPrinter toString - Listing entities:
[DEBUG] 2016-05-02 17:37:50,960 org.hibernate.internal.util.EntityPrinter toString - in.jdsoft.dms.model.UsersAccess{usersAccessId=1, userControl=#read#write#delete#update#, userRoleId=1}
[DEBUG] 2016-05-02 17:37:51,023 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:51,023 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:51,025 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersAccess#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:51,025 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:51,026 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:51,026 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,026 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,026 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,026 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,026 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:51,027 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.UsersAccessDAO.persist]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:51,027 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:51,027 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:51,027 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:51,027 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:51,027 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:51,028 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:51,028 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:51,028 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@2f162cc0[valid=true]]
[DEBUG] 2016-05-02 17:37:51,029 in.jdsoft.dms.dao.UsersAccessDAO persist - persisting UsersAccess instance
[DEBUG] 2016-05-02 17:37:51,029 org.hibernate.engine.spi.ActionQueue addResolvedEntityInsertAction - Executing identity-insert immediately
[DEBUG] 2016-05-02 17:37:51,029 org.hibernate.SQL logStatement - insert into mua_database.users_access (user_control, user_role_id) values (?, ?)
[DEBUG] 2016-05-02 17:37:51,095 org.hibernate.id.IdentifierGeneratorHelper getGeneratedIdentity - Natively generated identity: 2
[DEBUG] 2016-05-02 17:37:51,096 in.jdsoft.dms.dao.UsersAccessDAO persist - persist successful
[DEBUG] 2016-05-02 17:37:51,096 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:51,096 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersAccess#2]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:51,097 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:51,097 org.hibernate.event.internal.AbstractFlushingEventListener prepareEntityFlushes - Processing flush-time cascades
[DEBUG] 2016-05-02 17:37:51,097 org.hibernate.event.internal.AbstractFlushingEventListener prepareCollectionFlushes - Dirty checking collections
[DEBUG] 2016-05-02 17:37:51,097 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2016-05-02 17:37:51,097 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2016-05-02 17:37:51,097 org.hibernate.internal.util.EntityPrinter toString - Listing entities:
[DEBUG] 2016-05-02 17:37:51,097 org.hibernate.internal.util.EntityPrinter toString - in.jdsoft.dms.model.UsersAccess{usersAccessId=2, userControl=#read#write#update#, userRoleId=2}
[DEBUG] 2016-05-02 17:37:51,155 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:51,155 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:51,156 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.UsersAccess#2]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:51,156 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:51,156 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:51,156 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,157 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,157 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,157 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,157 org.springframework.beans.factory.support.DefaultListableBeanFactory doGetBean - Returning cached instance of singleton bean 'transactionManager'
[DEBUG] 2016-05-02 17:37:51,157 org.springframework.orm.hibernate4.HibernateTransactionManager getTransaction - Creating new transaction with name [in.jdsoft.dms.dao.UsersDAO.getUserByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[DEBUG] 2016-05-02 17:37:51,157 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
[DEBUG] 2016-05-02 17:37:51,157 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:51,158 org.hibernate.engine.transaction.spi.AbstractTransactionImpl begin - begin
[DEBUG] 2016-05-02 17:37:51,158 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtaining JDBC connection
[DEBUG] 2016-05-02 17:37:51,158 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl obtainConnection - Obtained JDBC connection
[DEBUG] 2016-05-02 17:37:51,159 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - initial autocommit status: true
[DEBUG] 2016-05-02 17:37:51,159 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doBegin - disabling autocommit
[DEBUG] 2016-05-02 17:37:51,159 org.springframework.orm.hibernate4.HibernateTransactionManager doBegin - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@71c5b236[valid=true]]
[DEBUG] 2016-05-02 17:37:51,160 in.jdsoft.dms.dao.UsersDAO getUserByName - getting Users instance with name: jdsoftAdmin
[DEBUG] 2016-05-02 17:37:51,169 org.hibernate.SQL logStatement - select this_.user_id as user1_5_0_, this_.folder_code as folder2_5_0_, this_.user_email as user3_5_0_, this_.user_name as user4_5_0_, this_.user_password as user5_5_0_, this_.user_role as user6_5_0_, this_.user_status as user7_5_0_ from mua_database.users this_ where this_.user_name=?
[DEBUG] 2016-05-02 17:37:51,173 org.hibernate.loader.Loader processResultSet - Result set row: 0
[DEBUG] 2016-05-02 17:37:51,177 org.hibernate.loader.Loader getRow - Result row: EntityKey[in.jdsoft.dms.model.Users#1]
[DEBUG] 2016-05-02 17:37:51,186 org.hibernate.engine.internal.TwoPhaseLoad doInitializeEntity - Resolving associations for [in.jdsoft.dms.model.Users#1]
[DEBUG] 2016-05-02 17:37:51,187 org.hibernate.engine.internal.TwoPhaseLoad doInitializeEntity - Done materializing entity [in.jdsoft.dms.model.Users#1]
[DEBUG] 2016-05-02 17:37:51,191 in.jdsoft.dms.dao.UsersDAO getUserByName - get successful, instance found
[DEBUG] 2016-05-02 17:37:51,192 org.springframework.orm.hibernate4.HibernateTransactionManager processCommit - Initiating transaction commit
[DEBUG] 2016-05-02 17:37:51,192 org.springframework.orm.hibernate4.HibernateTransactionManager doCommit - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.Users#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
[DEBUG] 2016-05-02 17:37:51,192 org.hibernate.engine.transaction.spi.AbstractTransactionImpl commit - committing
[DEBUG] 2016-05-02 17:37:51,192 org.hibernate.event.internal.AbstractFlushingEventListener prepareEntityFlushes - Processing flush-time cascades
[DEBUG] 2016-05-02 17:37:51,192 org.hibernate.event.internal.AbstractFlushingEventListener prepareCollectionFlushes - Dirty checking collections
[DEBUG] 2016-05-02 17:37:51,193 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2016-05-02 17:37:51,193 org.hibernate.event.internal.AbstractFlushingEventListener logFlushResults - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2016-05-02 17:37:51,193 org.hibernate.internal.util.EntityPrinter toString - Listing entities:
[DEBUG] 2016-05-02 17:37:51,193 org.hibernate.internal.util.EntityPrinter toString - in.jdsoft.dms.model.Users{userPassword=admin, userStatus=1, folderCode=123456, userEmail=jdsoftAdmin@gmail.com, userName=jdsoftAdmin, userRole=Admin, userId=1}
[DEBUG] 2016-05-02 17:37:51,194 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction doCommit - committed JDBC Connection
[DEBUG] 2016-05-02 17:37:51,194 org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction releaseManagedConnection - re-enabling autocommit
[DEBUG] 2016-05-02 17:37:51,196 org.springframework.orm.hibernate4.HibernateTransactionManager doCleanupAfterCompletion - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[in.jdsoft.dms.model.Users#1]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
[DEBUG] 2016-05-02 17:37:51,197 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Releasing JDBC connection
[DEBUG] 2016-05-02 17:37:51,197 org.hibernate.engine.jdbc.internal.LogicalConnectionImpl releaseConnection - Released JDBC connection
[DEBUG] 2016-05-02 17:37:51,197 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,197 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,197 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
[DEBUG] 2016-05-02 17:37:51,197 org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler physicalConnectionReleased - HHH000163: Logical connection releasing its physical connection
